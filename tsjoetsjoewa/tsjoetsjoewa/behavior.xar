<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="70.7107">
                        <Box name="Stand Up" id="3" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="81" y="128">
                            <bitmap>media/images/box/movement/stand.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                            <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="StandUpBehavior">
                                    <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                            <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                    <Choice value="Crouch" />
                                                    <Choice value="LyingBack" />
                                                    <Choice value="LyingBelly" />
                                                    <Choice value="Sit" />
                                                    <Choice value="SitRelax" />
                                                    <Choice value="StandInit" />
                                                    <Choice value="Stand" />
                                                    <Choice value="StandZero" />
                                                </Parameter>
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                                <Resource name="Stiffness" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="All motors" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Look At" id="9" localization="-1" tooltip="This box makes the robot look at a desired position." x="1745" y="270">
                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tracker = ALProxy( "ALTracker" )

        self.x = 0.0
        self.y = 0.0
        self.z = 0.0

        self.maxSpeed = 0.5

        self.useWholeBody = False
        self.frame = 0 #FRAME TORSO

    def onLoad(self):
        self.BIND_PYTHON(self.getName(), "setParameter")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.x = self.getParameter("X (m)")
        self.y = self.getParameter("Y (m)")
        self.z = self.getParameter("Z (m)")

        self.maxSpeed = self.getParameter("Speed (%)") / 100.0
        self.useWholeBody = self.getParameter("WholeBody")

        frameStr = self.getParameter("Frame")
        if frameStr == "Torso":
            self.frame = 0
        elif frameStr == "World":
            self.frame = 1
        elif frameStr == "Robot":
            self.frame = 2

        self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        pass

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)

        if (parameterName == "X (m)"):
            self.x = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Y (m)"):
            self.y = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Z (m)"):
            self.z = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Speed (%)"):
            self.maxSpeed = newValue / 100.0
            return

        if (parameterName == "WholeBody"):
            self.useWholeBody = newValue
            return

        if (parameterName == "Frame"):
            if(newValue == "Torso"):
                self.frame = 0
            elif newValue == "World":
                self.frame = 1
            elif newValue == "Robot":
                self.frame = 2]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="X (m)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.001" max="10" tooltip="X coordinate of the target to look at." id="5" />
                            <Parameter name="Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-10" max="10" tooltip="Y coordinate of the target to look at." id="6" />
                            <Parameter name="Z (m)" inherits_from_parent="0" content_type="2" value="5" default_value="0" min="-10" max="10" tooltip="Z coordinate of the target to look at." id="7" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="50" default_value="50" min="1" max="100" tooltip="Speed to move the head towards the desired position." id="8" />
                            <Parameter name="WholeBody" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Use whole body constraints" id="9" />
                            <Parameter name="Frame" inherits_from_parent="0" content_type="3" value="Torso" default_value="Torso" custom_choice="0" tooltip="Select the frame of target." id="10">
                                <Choice value="Torso" />
                                <Choice value="World" />
                                <Choice value="Robot" />
                            </Parameter>
                        </Box>
                        <Box name="Play Sound" id="11" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="180" y="0">
                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../Tsjoe Tsjoe Wa  STRAND  Kinderliedjes om op te dansen  Minidisco.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                            <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                            <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                            <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                            <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="336" y="30">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                            </Box>
                                            <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="140" y="27">
                                                <bitmap>media/images/box/folder.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.framemanager = ALProxy("ALFrameManager")

    def onInput_onStart(self):
        self.onStopped(self.framemanager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="Audio player" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Wait" id="12" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="220" y="126">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="Zwaaien" id="5" localization="8" tooltip="" x="384" y="123">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Zwaaien" id="4" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="194" y="224">
                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="176">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram />
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="">
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                            <Key frame="13" value="-71.4584" />
                                                            <Key frame="26" value="-71.4584" />
                                                            <Key frame="38" value="-71.4584" />
                                                            <Key frame="51" value="-71.6341" />
                                                            <Key frame="63" value="-76.0287" />
                                                            <Key frame="76" value="-88.5973" />
                                                            <Key frame="88" value="-91.234" />
                                                            <Key frame="101" value="-88.4215" />
                                                            <Key frame="113" value="-88.5094" />
                                                            <Key frame="126" value="-88.3336" />
                                                            <Key frame="138" value="-88.3336" />
                                                            <Key frame="151" value="-89.5641" />
                                                            <Key frame="163" value="-89.5641" />
                                                            <Key frame="176" value="-86.4879" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                            <Key frame="13" value="5.00743" />
                                                            <Key frame="26" value="5.00743" />
                                                            <Key frame="38" value="5.00743" />
                                                            <Key frame="51" value="3.60116" />
                                                            <Key frame="63" value="-10.4615" />
                                                            <Key frame="76" value="8.52309" />
                                                            <Key frame="88" value="43.1524" />
                                                            <Key frame="101" value="8.34731" />
                                                            <Key frame="113" value="19.949" />
                                                            <Key frame="126" value="9.48991" />
                                                            <Key frame="138" value="-0.61764" />
                                                            <Key frame="151" value="30.4081" />
                                                            <Key frame="163" value="41.8341" />
                                                            <Key frame="176" value="-4.13332" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                            <Key frame="13" value="-73.3872" />
                                                            <Key frame="26" value="-73.3872" />
                                                            <Key frame="38" value="-73.3872" />
                                                            <Key frame="51" value="-73.3872" />
                                                            <Key frame="63" value="-73.563" />
                                                            <Key frame="76" value="-73.8266" />
                                                            <Key frame="88" value="-74.7056" />
                                                            <Key frame="101" value="-80.5943" />
                                                            <Key frame="113" value="-81.5611" />
                                                            <Key frame="126" value="-82.0006" />
                                                            <Key frame="138" value="-82.2643" />
                                                            <Key frame="151" value="-82.44" />
                                                            <Key frame="163" value="-82.44" />
                                                            <Key frame="176" value="-83.319" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                            <Key frame="13" value="-5.71537" />
                                                            <Key frame="26" value="-6.5064" />
                                                            <Key frame="38" value="-6.5064" />
                                                            <Key frame="51" value="-9.40682" />
                                                            <Key frame="63" value="-50.1886" />
                                                            <Key frame="76" value="-18.4597" />
                                                            <Key frame="88" value="-0.00240423" />
                                                            <Key frame="101" value="-29.9735" />
                                                            <Key frame="113" value="-14.6803" />
                                                            <Key frame="126" value="-32.1708" />
                                                            <Key frame="138" value="-54.671" />
                                                            <Key frame="151" value="-12.9225" />
                                                            <Key frame="163" value="0.788627" />
                                                            <Key frame="176" value="-59.0656" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="4" />
                                            <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Vuisten_maken" id="14" localization="8" tooltip="" x="1186" y="185">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Timeline" id="6" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="139" y="51">
                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="63">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram />
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="">
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                            <Key frame="13" value="-2" />
                                                            <Key frame="26" value="-2" />
                                                            <Key frame="38" value="-2" />
                                                            <Key frame="51" value="-2" />
                                                            <Key frame="63" value="-2" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-4.74855" />
                                                            <Key frame="26" value="-4.74855" />
                                                            <Key frame="38" value="-4.74855" />
                                                            <Key frame="51" value="-4.74855" />
                                                            <Key frame="63" value="-4.83644" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                            <Key frame="13" value="0.6732" />
                                                            <Key frame="26" value="0.6732" />
                                                            <Key frame="38" value="0.6732" />
                                                            <Key frame="51" value="0.6732" />
                                                            <Key frame="63" value="0.6732" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                            <Key frame="13" value="93.866" />
                                                            <Key frame="26" value="93.866" />
                                                            <Key frame="38" value="80.2427" />
                                                            <Key frame="51" value="31.287" />
                                                            <Key frame="63" value="13.0056" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                            <Key frame="13" value="3.86484" />
                                                            <Key frame="26" value="4.04062" />
                                                            <Key frame="38" value="4.30429" />
                                                            <Key frame="51" value="4.48007" />
                                                            <Key frame="63" value="4.39218" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-52.4738" />
                                                            <Key frame="26" value="-52.4738" />
                                                            <Key frame="38" value="-40.2568" />
                                                            <Key frame="51" value="33.5722" />
                                                            <Key frame="63" value="37.3516" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                            <Key frame="13" value="2" />
                                                            <Key frame="26" value="2" />
                                                            <Key frame="38" value="2" />
                                                            <Key frame="51" value="2" />
                                                            <Key frame="63" value="2" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-11.692" />
                                                            <Key frame="26" value="-11.692" />
                                                            <Key frame="38" value="-11.6041" />
                                                            <Key frame="51" value="-11.7799" />
                                                            <Key frame="63" value="-11.7799" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                            <Key frame="13" value="0.5912" />
                                                            <Key frame="26" value="0.5908" />
                                                            <Key frame="38" value="0.5908" />
                                                            <Key frame="51" value="0.5912" />
                                                            <Key frame="63" value="0.5912" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                            <Key frame="13" value="89.9156" />
                                                            <Key frame="26" value="90.0035" />
                                                            <Key frame="38" value="77.7866" />
                                                            <Key frame="51" value="36.7411" />
                                                            <Key frame="63" value="11.0768" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                            <Key frame="13" value="-2.81494" />
                                                            <Key frame="26" value="-2.72705" />
                                                            <Key frame="38" value="-2.81494" />
                                                            <Key frame="51" value="-2.99072" />
                                                            <Key frame="63" value="-2.99072" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                            <Key frame="13" value="33.1328" />
                                                            <Key frame="26" value="33.1328" />
                                                            <Key frame="38" value="20.9158" />
                                                            <Key frame="51" value="-41.5752" />
                                                            <Key frame="63" value="-50.0128" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="Hands" id="7" localization="8" tooltip="the robot stiffens the motors of one or both of his hands so that he can open or close&#x0A;it/them. Then he relaxes the motors of his hand(s)." x="310" y="54">
                                                <bitmap>media/images/box/movement/move_arm.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy( "ALMotion" )
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        try:
            hands = []
            if( self.getParameter("Side") in ["Left", "Both"] ):
                hands.append( "LHand" )
            if( self.getParameter("Side") in ["Right", "Both"] ):
                hands.append( "RHand" )
            ids = []
            for hand in hands:
                if( self.getParameter("Action") == "Open the hand" ):
                    ids.append( self.motion.post.openHand(hand) )
                else:
                    ids.append( self.motion.post.closeHand(hand) )
            for id in ids:
                self.motion.wait( id, 0 )
        finally:
            self.bIsRunning = False
            self.onDone() # activate output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the hand to move or both of them." id="4">
                                                    <Choice value="Both" />
                                                    <Choice value="Left" />
                                                    <Choice value="Right" />
                                                </Parameter>
                                                <Parameter name="Action" inherits_from_parent="0" content_type="3" value="Close the hand" default_value="Open the hand" custom_choice="0" tooltip="Action you want to make on the robot&apos;s hand." id="5">
                                                    <Choice value="Open the hand" />
                                                    <Choice value="Close the hand" />
                                                </Parameter>
                                            </Box>
                                            <Link inputowner="7" indexofinput="2" outputowner="6" indexofoutput="4" />
                                            <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Op_plaats" id="15" localization="8" tooltip="" x="94" y="258">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Op_plaats" id="2" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="142" y="63">
                                                <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                                                <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                                                <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                                                <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                                                <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                                                <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                                                <Resource name="Legs" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Stand Up" id="1" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="322" y="66">
                                                <bitmap>media/images/box/movement/stand.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="StandUpBehavior">
                                                        <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                            <Diagram>
                                                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                    <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                        <Choice value="Crouch" />
                                                                        <Choice value="LyingBack" />
                                                                        <Choice value="LyingBelly" />
                                                                        <Choice value="Sit" />
                                                                        <Choice value="SitRelax" />
                                                                        <Choice value="StandInit" />
                                                                        <Choice value="Stand" />
                                                                        <Choice value="StandZero" />
                                                                    </Parameter>
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                    <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                    <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Op_plaats (1)" id="13" localization="8" tooltip="" x="1018" y="165">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Op_plaats" id="2" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="142" y="63">
                                                <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                                                <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                                                <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                                                <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                                                <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                                                <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                                                <Resource name="Legs" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Op_plaats (2)" id="16" localization="8" tooltip="" x="1016" y="382">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Op_plaats" id="2" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="142" y="63">
                                                <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                                                <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                                                <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                                                <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                                                <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                                                <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                                                <Resource name="Legs" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Stand Up" id="1" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="322" y="66">
                                                <bitmap>media/images/box/movement/stand.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="StandUpBehavior">
                                                        <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                            <Diagram>
                                                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                    <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                        <Choice value="Crouch" />
                                                                        <Choice value="LyingBack" />
                                                                        <Choice value="LyingBelly" />
                                                                        <Choice value="Sit" />
                                                                        <Choice value="SitRelax" />
                                                                        <Choice value="StandInit" />
                                                                        <Choice value="Stand" />
                                                                        <Choice value="StandZero" />
                                                                    </Parameter>
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                    <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                    <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="5" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Vuisten_maken (1)" id="17" localization="8" tooltip="" x="1173" y="383">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Timeline" id="6" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="139" y="51">
                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="101">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram />
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="">
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                            <Key frame="13" value="-2" />
                                                            <Key frame="26" value="-2" />
                                                            <Key frame="38" value="-2" />
                                                            <Key frame="51" value="-2" />
                                                            <Key frame="63" value="-2" />
                                                            <Key frame="76" value="-2" />
                                                            <Key frame="88" value="-2" />
                                                            <Key frame="101" value="-2" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-4.74855" />
                                                            <Key frame="26" value="-4.74855" />
                                                            <Key frame="38" value="-4.74855" />
                                                            <Key frame="51" value="-4.74855" />
                                                            <Key frame="63" value="-4.83644" />
                                                            <Key frame="76" value="-4.83644" />
                                                            <Key frame="88" value="-4.83644" />
                                                            <Key frame="101" value="-4.83644" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                            <Key frame="13" value="0.6732" />
                                                            <Key frame="26" value="0.6732" />
                                                            <Key frame="38" value="0.6732" />
                                                            <Key frame="51" value="0.6732" />
                                                            <Key frame="63" value="0.6732" />
                                                            <Key frame="76" value="0.6732" />
                                                            <Key frame="88" value="0.6732" />
                                                            <Key frame="101" value="0.6732" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                            <Key frame="13" value="62.9281" />
                                                            <Key frame="26" value="60.8187" />
                                                            <Key frame="38" value="44.9982" />
                                                            <Key frame="51" value="18.7185" />
                                                            <Key frame="63" value="2.81013" />
                                                            <Key frame="76" value="-4.22121" />
                                                            <Key frame="88" value="-4.22121" />
                                                            <Key frame="101" value="-4.22121" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                            <Key frame="13" value="3.86484" />
                                                            <Key frame="26" value="4.04062" />
                                                            <Key frame="38" value="4.30429" />
                                                            <Key frame="51" value="4.48007" />
                                                            <Key frame="63" value="4.39218" />
                                                            <Key frame="76" value="4.30429" />
                                                            <Key frame="88" value="4.12851" />
                                                            <Key frame="101" value="4.12851" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-1.84813" />
                                                            <Key frame="26" value="-1.84813" />
                                                            <Key frame="38" value="-1.84813" />
                                                            <Key frame="51" value="-1.84813" />
                                                            <Key frame="63" value="-1.84813" />
                                                            <Key frame="76" value="-1.84813" />
                                                            <Key frame="88" value="-1.84813" />
                                                            <Key frame="101" value="-1.84813" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                            <Key frame="13" value="2" />
                                                            <Key frame="26" value="2" />
                                                            <Key frame="38" value="2" />
                                                            <Key frame="51" value="2" />
                                                            <Key frame="63" value="2" />
                                                            <Key frame="76" value="2" />
                                                            <Key frame="88" value="2" />
                                                            <Key frame="101" value="2" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-11.692" />
                                                            <Key frame="26" value="-11.692" />
                                                            <Key frame="38" value="-11.6041" />
                                                            <Key frame="51" value="-11.7799" />
                                                            <Key frame="63" value="-11.7799" />
                                                            <Key frame="76" value="-11.7799" />
                                                            <Key frame="88" value="-11.7799" />
                                                            <Key frame="101" value="-11.7799" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                            <Key frame="13" value="0.5912" />
                                                            <Key frame="26" value="0.5908" />
                                                            <Key frame="38" value="0.5908" />
                                                            <Key frame="51" value="0.5912" />
                                                            <Key frame="63" value="0.5912" />
                                                            <Key frame="76" value="0.5908" />
                                                            <Key frame="88" value="0.5908" />
                                                            <Key frame="101" value="0.5908" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                            <Key frame="13" value="54.1437" />
                                                            <Key frame="26" value="53.7042" />
                                                            <Key frame="38" value="42.8936" />
                                                            <Key frame="51" value="16.0866" />
                                                            <Key frame="63" value="3.95753" />
                                                            <Key frame="76" value="-1.22808" />
                                                            <Key frame="88" value="-1.22808" />
                                                            <Key frame="101" value="-1.22808" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                            <Key frame="13" value="-2.81494" />
                                                            <Key frame="26" value="-2.72705" />
                                                            <Key frame="38" value="-2.81494" />
                                                            <Key frame="51" value="-2.99072" />
                                                            <Key frame="63" value="-2.99072" />
                                                            <Key frame="76" value="-2.99072" />
                                                            <Key frame="88" value="-3.1665" />
                                                            <Key frame="101" value="-3.25439" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                            <Key frame="13" value="19.8611" />
                                                            <Key frame="26" value="19.8611" />
                                                            <Key frame="38" value="19.8611" />
                                                            <Key frame="51" value="19.8611" />
                                                            <Key frame="63" value="19.8611" />
                                                            <Key frame="76" value="19.8611" />
                                                            <Key frame="88" value="19.8611" />
                                                            <Key frame="101" value="19.8611" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="Hands" id="7" localization="8" tooltip="the robot stiffens the motors of one or both of his hands so that he can open or close&#x0A;it/them. Then he relaxes the motors of his hand(s)." x="310" y="54">
                                                <bitmap>media/images/box/movement/move_arm.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy( "ALMotion" )
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        try:
            hands = []
            if( self.getParameter("Side") in ["Left", "Both"] ):
                hands.append( "LHand" )
            if( self.getParameter("Side") in ["Right", "Both"] ):
                hands.append( "RHand" )
            ids = []
            for hand in hands:
                if( self.getParameter("Action") == "Open the hand" ):
                    ids.append( self.motion.post.openHand(hand) )
                else:
                    ids.append( self.motion.post.closeHand(hand) )
            for id in ids:
                self.motion.wait( id, 0 )
        finally:
            self.bIsRunning = False
            self.onDone() # activate output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the hand to move or both of them." id="4">
                                                    <Choice value="Both" />
                                                    <Choice value="Left" />
                                                    <Choice value="Right" />
                                                </Parameter>
                                                <Parameter name="Action" inherits_from_parent="0" content_type="3" value="Close the hand" default_value="Open the hand" custom_choice="0" tooltip="Action you want to make on the robot&apos;s hand." id="5">
                                                    <Choice value="Open the hand" />
                                                    <Choice value="Close the hand" />
                                                </Parameter>
                                            </Box>
                                            <Link inputowner="7" indexofinput="2" outputowner="6" indexofoutput="4" />
                                            <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Duimen_omhoog" id="18" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1012" y="542">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="20">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="13" value="0.0152" />
                                        <Key frame="20" value="0.0152" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="39.8125" />
                                        <Key frame="20" value="-62.2297" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-49.4855" />
                                        <Key frame="20" value="52.1174" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Wait (1)" id="19" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="1072" y="240">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="4" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="Wait (2)" id="20" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="1176" y="555">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="4" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="Op_plaats (3)" id="21" localization="8" tooltip="" x="1019" y="726">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Op_plaats" id="2" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="142" y="63">
                                                <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                                                <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                                                <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                                                <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                                                <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                                                <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                                                <Resource name="Legs" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Stand Up" id="1" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="322" y="66">
                                                <bitmap>media/images/box/movement/stand.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="StandUpBehavior">
                                                        <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                            <Diagram>
                                                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                    <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                        <Choice value="Crouch" />
                                                                        <Choice value="LyingBack" />
                                                                        <Choice value="LyingBelly" />
                                                                        <Choice value="Sit" />
                                                                        <Choice value="SitRelax" />
                                                                        <Choice value="StandInit" />
                                                                        <Choice value="Stand" />
                                                                        <Choice value="StandZero" />
                                                                    </Parameter>
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                    <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                    <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="5" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Vuisten_maken (2)" id="22" localization="8" tooltip="" x="1176" y="727">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Timeline" id="6" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="139" y="51">
                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="101">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram />
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="">
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                            <Key frame="13" value="-2" />
                                                            <Key frame="26" value="-2" />
                                                            <Key frame="38" value="-2" />
                                                            <Key frame="51" value="-2" />
                                                            <Key frame="63" value="-2" />
                                                            <Key frame="76" value="-2" />
                                                            <Key frame="88" value="-2" />
                                                            <Key frame="101" value="-2" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-4.74855" />
                                                            <Key frame="26" value="-4.74855" />
                                                            <Key frame="38" value="-4.74855" />
                                                            <Key frame="51" value="-4.74855" />
                                                            <Key frame="63" value="-4.83644" />
                                                            <Key frame="76" value="-4.83644" />
                                                            <Key frame="88" value="-4.83644" />
                                                            <Key frame="101" value="-4.83644" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                            <Key frame="13" value="0.6732" />
                                                            <Key frame="26" value="0.6732" />
                                                            <Key frame="38" value="0.6732" />
                                                            <Key frame="51" value="0.6732" />
                                                            <Key frame="63" value="0.6732" />
                                                            <Key frame="76" value="0.6732" />
                                                            <Key frame="88" value="0.6732" />
                                                            <Key frame="101" value="0.6732" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                            <Key frame="13" value="62.9281" />
                                                            <Key frame="26" value="60.8187" />
                                                            <Key frame="38" value="44.9982" />
                                                            <Key frame="51" value="18.7185" />
                                                            <Key frame="63" value="2.81013" />
                                                            <Key frame="76" value="-4.22121" />
                                                            <Key frame="88" value="-4.22121" />
                                                            <Key frame="101" value="-4.22121" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                            <Key frame="13" value="3.86484" />
                                                            <Key frame="26" value="4.04062" />
                                                            <Key frame="38" value="4.30429" />
                                                            <Key frame="51" value="4.48007" />
                                                            <Key frame="63" value="4.39218" />
                                                            <Key frame="76" value="4.30429" />
                                                            <Key frame="88" value="4.12851" />
                                                            <Key frame="101" value="4.12851" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-1.84813" />
                                                            <Key frame="26" value="-1.84813" />
                                                            <Key frame="38" value="-1.84813" />
                                                            <Key frame="51" value="-1.84813" />
                                                            <Key frame="63" value="-1.84813" />
                                                            <Key frame="76" value="-1.84813" />
                                                            <Key frame="88" value="-1.84813" />
                                                            <Key frame="101" value="-1.84813" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                            <Key frame="13" value="2" />
                                                            <Key frame="26" value="2" />
                                                            <Key frame="38" value="2" />
                                                            <Key frame="51" value="2" />
                                                            <Key frame="63" value="2" />
                                                            <Key frame="76" value="2" />
                                                            <Key frame="88" value="2" />
                                                            <Key frame="101" value="2" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-11.692" />
                                                            <Key frame="26" value="-11.692" />
                                                            <Key frame="38" value="-11.6041" />
                                                            <Key frame="51" value="-11.7799" />
                                                            <Key frame="63" value="-11.7799" />
                                                            <Key frame="76" value="-11.7799" />
                                                            <Key frame="88" value="-11.7799" />
                                                            <Key frame="101" value="-11.7799" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                            <Key frame="13" value="0.5912" />
                                                            <Key frame="26" value="0.5908" />
                                                            <Key frame="38" value="0.5908" />
                                                            <Key frame="51" value="0.5912" />
                                                            <Key frame="63" value="0.5912" />
                                                            <Key frame="76" value="0.5908" />
                                                            <Key frame="88" value="0.5908" />
                                                            <Key frame="101" value="0.5908" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                            <Key frame="13" value="54.1437" />
                                                            <Key frame="26" value="53.7042" />
                                                            <Key frame="38" value="42.8936" />
                                                            <Key frame="51" value="16.0866" />
                                                            <Key frame="63" value="3.95753" />
                                                            <Key frame="76" value="-1.22808" />
                                                            <Key frame="88" value="-1.22808" />
                                                            <Key frame="101" value="-1.22808" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                            <Key frame="13" value="-2.81494" />
                                                            <Key frame="26" value="-2.72705" />
                                                            <Key frame="38" value="-2.81494" />
                                                            <Key frame="51" value="-2.99072" />
                                                            <Key frame="63" value="-2.99072" />
                                                            <Key frame="76" value="-2.99072" />
                                                            <Key frame="88" value="-3.1665" />
                                                            <Key frame="101" value="-3.25439" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                            <Key frame="13" value="19.8611" />
                                                            <Key frame="26" value="19.8611" />
                                                            <Key frame="38" value="19.8611" />
                                                            <Key frame="51" value="19.8611" />
                                                            <Key frame="63" value="19.8611" />
                                                            <Key frame="76" value="19.8611" />
                                                            <Key frame="88" value="19.8611" />
                                                            <Key frame="101" value="19.8611" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="Hands" id="7" localization="8" tooltip="the robot stiffens the motors of one or both of his hands so that he can open or close&#x0A;it/them. Then he relaxes the motors of his hand(s)." x="310" y="54">
                                                <bitmap>media/images/box/movement/move_arm.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy( "ALMotion" )
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        try:
            hands = []
            if( self.getParameter("Side") in ["Left", "Both"] ):
                hands.append( "LHand" )
            if( self.getParameter("Side") in ["Right", "Both"] ):
                hands.append( "RHand" )
            ids = []
            for hand in hands:
                if( self.getParameter("Action") == "Open the hand" ):
                    ids.append( self.motion.post.openHand(hand) )
                else:
                    ids.append( self.motion.post.closeHand(hand) )
            for id in ids:
                self.motion.wait( id, 0 )
        finally:
            self.bIsRunning = False
            self.onDone() # activate output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the hand to move or both of them." id="4">
                                                    <Choice value="Both" />
                                                    <Choice value="Left" />
                                                    <Choice value="Right" />
                                                </Parameter>
                                                <Parameter name="Action" inherits_from_parent="0" content_type="3" value="Close the hand" default_value="Open the hand" custom_choice="0" tooltip="Action you want to make on the robot&apos;s hand." id="5">
                                                    <Choice value="Open the hand" />
                                                    <Choice value="Close the hand" />
                                                </Parameter>
                                            </Box>
                                            <Link inputowner="7" indexofinput="2" outputowner="6" indexofoutput="4" />
                                            <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Duimen_omhoog (1)" id="23" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1015" y="886">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="20">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="13" value="0.0152" />
                                        <Key frame="20" value="0.0152" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="39.8125" />
                                        <Key frame="20" value="-62.2297" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-49.4855" />
                                        <Key frame="20" value="52.1174" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Wait (3)" id="24" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="1179" y="899">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="7" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="Op_plaats (4)" id="25" localization="8" tooltip="" x="1440" y="126">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Op_plaats" id="2" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="142" y="63">
                                                <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                                                <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                                                <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                                                <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                                                <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                                                <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                                                <Resource name="Legs" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Stand Up" id="1" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="322" y="66">
                                                <bitmap>media/images/box/movement/stand.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="StandUpBehavior">
                                                        <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                            <Diagram>
                                                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                    <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                        <Choice value="Crouch" />
                                                                        <Choice value="LyingBack" />
                                                                        <Choice value="LyingBelly" />
                                                                        <Choice value="Sit" />
                                                                        <Choice value="SitRelax" />
                                                                        <Choice value="StandInit" />
                                                                        <Choice value="Stand" />
                                                                        <Choice value="StandZero" />
                                                                    </Parameter>
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                    <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                    <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="5" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Vuisten_maken (3)" id="26" localization="8" tooltip="" x="1597" y="127">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Timeline" id="6" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="139" y="51">
                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="101">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram />
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="">
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                            <Key frame="13" value="-2" />
                                                            <Key frame="26" value="-2" />
                                                            <Key frame="38" value="-2" />
                                                            <Key frame="51" value="-2" />
                                                            <Key frame="63" value="-2" />
                                                            <Key frame="76" value="-2" />
                                                            <Key frame="88" value="-2" />
                                                            <Key frame="101" value="-2" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-4.74855" />
                                                            <Key frame="26" value="-4.74855" />
                                                            <Key frame="38" value="-4.74855" />
                                                            <Key frame="51" value="-4.74855" />
                                                            <Key frame="63" value="-4.83644" />
                                                            <Key frame="76" value="-4.83644" />
                                                            <Key frame="88" value="-4.83644" />
                                                            <Key frame="101" value="-4.83644" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                            <Key frame="13" value="0.6732" />
                                                            <Key frame="26" value="0.6732" />
                                                            <Key frame="38" value="0.6732" />
                                                            <Key frame="51" value="0.6732" />
                                                            <Key frame="63" value="0.6732" />
                                                            <Key frame="76" value="0.6732" />
                                                            <Key frame="88" value="0.6732" />
                                                            <Key frame="101" value="0.6732" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                            <Key frame="13" value="62.9281" />
                                                            <Key frame="26" value="60.8187" />
                                                            <Key frame="38" value="44.9982" />
                                                            <Key frame="51" value="18.7185" />
                                                            <Key frame="63" value="2.81013" />
                                                            <Key frame="76" value="-4.22121" />
                                                            <Key frame="88" value="-4.22121" />
                                                            <Key frame="101" value="-4.22121" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                            <Key frame="13" value="3.86484" />
                                                            <Key frame="26" value="4.04062" />
                                                            <Key frame="38" value="4.30429" />
                                                            <Key frame="51" value="4.48007" />
                                                            <Key frame="63" value="4.39218" />
                                                            <Key frame="76" value="4.30429" />
                                                            <Key frame="88" value="4.12851" />
                                                            <Key frame="101" value="4.12851" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-1.84813" />
                                                            <Key frame="26" value="-1.84813" />
                                                            <Key frame="38" value="-1.84813" />
                                                            <Key frame="51" value="-1.84813" />
                                                            <Key frame="63" value="-1.84813" />
                                                            <Key frame="76" value="-1.84813" />
                                                            <Key frame="88" value="-1.84813" />
                                                            <Key frame="101" value="-1.84813" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                            <Key frame="13" value="2" />
                                                            <Key frame="26" value="2" />
                                                            <Key frame="38" value="2" />
                                                            <Key frame="51" value="2" />
                                                            <Key frame="63" value="2" />
                                                            <Key frame="76" value="2" />
                                                            <Key frame="88" value="2" />
                                                            <Key frame="101" value="2" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-11.692" />
                                                            <Key frame="26" value="-11.692" />
                                                            <Key frame="38" value="-11.6041" />
                                                            <Key frame="51" value="-11.7799" />
                                                            <Key frame="63" value="-11.7799" />
                                                            <Key frame="76" value="-11.7799" />
                                                            <Key frame="88" value="-11.7799" />
                                                            <Key frame="101" value="-11.7799" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                            <Key frame="13" value="0.5912" />
                                                            <Key frame="26" value="0.5908" />
                                                            <Key frame="38" value="0.5908" />
                                                            <Key frame="51" value="0.5912" />
                                                            <Key frame="63" value="0.5912" />
                                                            <Key frame="76" value="0.5908" />
                                                            <Key frame="88" value="0.5908" />
                                                            <Key frame="101" value="0.5908" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                            <Key frame="13" value="54.1437" />
                                                            <Key frame="26" value="53.7042" />
                                                            <Key frame="38" value="42.8936" />
                                                            <Key frame="51" value="16.0866" />
                                                            <Key frame="63" value="3.95753" />
                                                            <Key frame="76" value="-1.22808" />
                                                            <Key frame="88" value="-1.22808" />
                                                            <Key frame="101" value="-1.22808" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                            <Key frame="13" value="-2.81494" />
                                                            <Key frame="26" value="-2.72705" />
                                                            <Key frame="38" value="-2.81494" />
                                                            <Key frame="51" value="-2.99072" />
                                                            <Key frame="63" value="-2.99072" />
                                                            <Key frame="76" value="-2.99072" />
                                                            <Key frame="88" value="-3.1665" />
                                                            <Key frame="101" value="-3.25439" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                            <Key frame="13" value="19.8611" />
                                                            <Key frame="26" value="19.8611" />
                                                            <Key frame="38" value="19.8611" />
                                                            <Key frame="51" value="19.8611" />
                                                            <Key frame="63" value="19.8611" />
                                                            <Key frame="76" value="19.8611" />
                                                            <Key frame="88" value="19.8611" />
                                                            <Key frame="101" value="19.8611" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="Hands" id="7" localization="8" tooltip="the robot stiffens the motors of one or both of his hands so that he can open or close&#x0A;it/them. Then he relaxes the motors of his hand(s)." x="310" y="54">
                                                <bitmap>media/images/box/movement/move_arm.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy( "ALMotion" )
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        try:
            hands = []
            if( self.getParameter("Side") in ["Left", "Both"] ):
                hands.append( "LHand" )
            if( self.getParameter("Side") in ["Right", "Both"] ):
                hands.append( "RHand" )
            ids = []
            for hand in hands:
                if( self.getParameter("Action") == "Open the hand" ):
                    ids.append( self.motion.post.openHand(hand) )
                else:
                    ids.append( self.motion.post.closeHand(hand) )
            for id in ids:
                self.motion.wait( id, 0 )
        finally:
            self.bIsRunning = False
            self.onDone() # activate output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the hand to move or both of them." id="4">
                                                    <Choice value="Both" />
                                                    <Choice value="Left" />
                                                    <Choice value="Right" />
                                                </Parameter>
                                                <Parameter name="Action" inherits_from_parent="0" content_type="3" value="Close the hand" default_value="Open the hand" custom_choice="0" tooltip="Action you want to make on the robot&apos;s hand." id="5">
                                                    <Choice value="Open the hand" />
                                                    <Choice value="Close the hand" />
                                                </Parameter>
                                            </Box>
                                            <Link inputowner="7" indexofinput="2" outputowner="6" indexofoutput="4" />
                                            <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Duimen_omhoog (2)" id="27" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1436" y="286">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="20">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="13" value="0.0152" />
                                        <Key frame="20" value="0.0152" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="39.8125" />
                                        <Key frame="20" value="-62.2297" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-49.4855" />
                                        <Key frame="20" value="52.1174" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Wait (4)" id="28" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="1600" y="265">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="Wait (5)" id="1" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="1442" y="460">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="6" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="Look At (1)" id="2" localization="-1" tooltip="This box makes the robot look at a desired position." x="1887" y="582">
                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tracker = ALProxy( "ALTracker" )

        self.x = 0.0
        self.y = 0.0
        self.z = 0.0

        self.maxSpeed = 0.5

        self.useWholeBody = False
        self.frame = 0 #FRAME TORSO

    def onLoad(self):
        self.BIND_PYTHON(self.getName(), "setParameter")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.x = self.getParameter("X (m)")
        self.y = self.getParameter("Y (m)")
        self.z = self.getParameter("Z (m)")

        self.maxSpeed = self.getParameter("Speed (%)") / 100.0
        self.useWholeBody = self.getParameter("WholeBody")

        frameStr = self.getParameter("Frame")
        if frameStr == "Torso":
            self.frame = 0
        elif frameStr == "World":
            self.frame = 1
        elif frameStr == "Robot":
            self.frame = 2

        self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        pass

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)

        if (parameterName == "X (m)"):
            self.x = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Y (m)"):
            self.y = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Z (m)"):
            self.z = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Speed (%)"):
            self.maxSpeed = newValue / 100.0
            return

        if (parameterName == "WholeBody"):
            self.useWholeBody = newValue
            return

        if (parameterName == "Frame"):
            if(newValue == "Torso"):
                self.frame = 0
            elif newValue == "World":
                self.frame = 1
            elif newValue == "Robot":
                self.frame = 2]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="X (m)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.001" max="10" tooltip="X coordinate of the target to look at." id="5" />
                            <Parameter name="Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-10" max="10" tooltip="Y coordinate of the target to look at." id="6" />
                            <Parameter name="Z (m)" inherits_from_parent="0" content_type="2" value="5" default_value="0" min="-10" max="10" tooltip="Z coordinate of the target to look at." id="7" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="50" default_value="50" min="1" max="100" tooltip="Speed to move the head towards the desired position." id="8" />
                            <Parameter name="WholeBody" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Use whole body constraints" id="9" />
                            <Parameter name="Frame" inherits_from_parent="0" content_type="3" value="Torso" default_value="Torso" custom_choice="0" tooltip="Select the frame of target." id="10">
                                <Choice value="Torso" />
                                <Choice value="World" />
                                <Choice value="Robot" />
                            </Parameter>
                        </Box>
                        <Box name="Op_plaats (5)" id="4" localization="8" tooltip="" x="1590" y="449">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Op_plaats" id="2" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="142" y="63">
                                                <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                                                <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                                                <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                                                <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                                                <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                                                <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                                                <Resource name="Legs" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Stand Up" id="1" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="322" y="66">
                                                <bitmap>media/images/box/movement/stand.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="StandUpBehavior">
                                                        <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                            <Diagram>
                                                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                    <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                        <Choice value="Crouch" />
                                                                        <Choice value="LyingBack" />
                                                                        <Choice value="LyingBelly" />
                                                                        <Choice value="Sit" />
                                                                        <Choice value="SitRelax" />
                                                                        <Choice value="StandInit" />
                                                                        <Choice value="Stand" />
                                                                        <Choice value="StandZero" />
                                                                    </Parameter>
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                    <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                    <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="5" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Vuisten_maken (4)" id="7" localization="8" tooltip="" x="1739" y="439">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Timeline" id="6" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="139" y="51">
                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="101">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram />
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="">
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                            <Key frame="13" value="-2" />
                                                            <Key frame="26" value="-2" />
                                                            <Key frame="38" value="-2" />
                                                            <Key frame="51" value="-2" />
                                                            <Key frame="63" value="-2" />
                                                            <Key frame="76" value="-2" />
                                                            <Key frame="88" value="-2" />
                                                            <Key frame="101" value="-2" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-4.74855" />
                                                            <Key frame="26" value="-4.74855" />
                                                            <Key frame="38" value="-4.74855" />
                                                            <Key frame="51" value="-4.74855" />
                                                            <Key frame="63" value="-4.83644" />
                                                            <Key frame="76" value="-4.83644" />
                                                            <Key frame="88" value="-4.83644" />
                                                            <Key frame="101" value="-4.83644" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                            <Key frame="13" value="0.6732" />
                                                            <Key frame="26" value="0.6732" />
                                                            <Key frame="38" value="0.6732" />
                                                            <Key frame="51" value="0.6732" />
                                                            <Key frame="63" value="0.6732" />
                                                            <Key frame="76" value="0.6732" />
                                                            <Key frame="88" value="0.6732" />
                                                            <Key frame="101" value="0.6732" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                            <Key frame="13" value="62.9281" />
                                                            <Key frame="26" value="60.8187" />
                                                            <Key frame="38" value="44.9982" />
                                                            <Key frame="51" value="18.7185" />
                                                            <Key frame="63" value="2.81013" />
                                                            <Key frame="76" value="-4.22121" />
                                                            <Key frame="88" value="-4.22121" />
                                                            <Key frame="101" value="-4.22121" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                            <Key frame="13" value="3.86484" />
                                                            <Key frame="26" value="4.04062" />
                                                            <Key frame="38" value="4.30429" />
                                                            <Key frame="51" value="4.48007" />
                                                            <Key frame="63" value="4.39218" />
                                                            <Key frame="76" value="4.30429" />
                                                            <Key frame="88" value="4.12851" />
                                                            <Key frame="101" value="4.12851" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-1.84813" />
                                                            <Key frame="26" value="-1.84813" />
                                                            <Key frame="38" value="-1.84813" />
                                                            <Key frame="51" value="-1.84813" />
                                                            <Key frame="63" value="-1.84813" />
                                                            <Key frame="76" value="-1.84813" />
                                                            <Key frame="88" value="-1.84813" />
                                                            <Key frame="101" value="-1.84813" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                            <Key frame="13" value="2" />
                                                            <Key frame="26" value="2" />
                                                            <Key frame="38" value="2" />
                                                            <Key frame="51" value="2" />
                                                            <Key frame="63" value="2" />
                                                            <Key frame="76" value="2" />
                                                            <Key frame="88" value="2" />
                                                            <Key frame="101" value="2" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-11.692" />
                                                            <Key frame="26" value="-11.692" />
                                                            <Key frame="38" value="-11.6041" />
                                                            <Key frame="51" value="-11.7799" />
                                                            <Key frame="63" value="-11.7799" />
                                                            <Key frame="76" value="-11.7799" />
                                                            <Key frame="88" value="-11.7799" />
                                                            <Key frame="101" value="-11.7799" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                            <Key frame="13" value="0.5912" />
                                                            <Key frame="26" value="0.5908" />
                                                            <Key frame="38" value="0.5908" />
                                                            <Key frame="51" value="0.5912" />
                                                            <Key frame="63" value="0.5912" />
                                                            <Key frame="76" value="0.5908" />
                                                            <Key frame="88" value="0.5908" />
                                                            <Key frame="101" value="0.5908" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                            <Key frame="13" value="54.1437" />
                                                            <Key frame="26" value="53.7042" />
                                                            <Key frame="38" value="42.8936" />
                                                            <Key frame="51" value="16.0866" />
                                                            <Key frame="63" value="3.95753" />
                                                            <Key frame="76" value="-1.22808" />
                                                            <Key frame="88" value="-1.22808" />
                                                            <Key frame="101" value="-1.22808" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                            <Key frame="13" value="-2.81494" />
                                                            <Key frame="26" value="-2.72705" />
                                                            <Key frame="38" value="-2.81494" />
                                                            <Key frame="51" value="-2.99072" />
                                                            <Key frame="63" value="-2.99072" />
                                                            <Key frame="76" value="-2.99072" />
                                                            <Key frame="88" value="-3.1665" />
                                                            <Key frame="101" value="-3.25439" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                            <Key frame="13" value="19.8611" />
                                                            <Key frame="26" value="19.8611" />
                                                            <Key frame="38" value="19.8611" />
                                                            <Key frame="51" value="19.8611" />
                                                            <Key frame="63" value="19.8611" />
                                                            <Key frame="76" value="19.8611" />
                                                            <Key frame="88" value="19.8611" />
                                                            <Key frame="101" value="19.8611" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="Hands" id="7" localization="8" tooltip="the robot stiffens the motors of one or both of his hands so that he can open or close&#x0A;it/them. Then he relaxes the motors of his hand(s)." x="310" y="54">
                                                <bitmap>media/images/box/movement/move_arm.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy( "ALMotion" )
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        try:
            hands = []
            if( self.getParameter("Side") in ["Left", "Both"] ):
                hands.append( "LHand" )
            if( self.getParameter("Side") in ["Right", "Both"] ):
                hands.append( "RHand" )
            ids = []
            for hand in hands:
                if( self.getParameter("Action") == "Open the hand" ):
                    ids.append( self.motion.post.openHand(hand) )
                else:
                    ids.append( self.motion.post.closeHand(hand) )
            for id in ids:
                self.motion.wait( id, 0 )
        finally:
            self.bIsRunning = False
            self.onDone() # activate output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the hand to move or both of them." id="4">
                                                    <Choice value="Both" />
                                                    <Choice value="Left" />
                                                    <Choice value="Right" />
                                                </Parameter>
                                                <Parameter name="Action" inherits_from_parent="0" content_type="3" value="Close the hand" default_value="Open the hand" custom_choice="0" tooltip="Action you want to make on the robot&apos;s hand." id="5">
                                                    <Choice value="Open the hand" />
                                                    <Choice value="Close the hand" />
                                                </Parameter>
                                            </Box>
                                            <Link inputowner="7" indexofinput="2" outputowner="6" indexofoutput="4" />
                                            <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Duimen_omhoog (3)" id="29" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1578" y="598">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="20">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="13" value="0.0152" />
                                        <Key frame="20" value="0.0152" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="39.8125" />
                                        <Key frame="20" value="-62.2297" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-49.4855" />
                                        <Key frame="20" value="52.1174" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Wait (6)" id="30" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="1742" y="577">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="Wait (7)" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="1451" y="758">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="8" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="Look At (2)" id="8" localization="-1" tooltip="This box makes the robot look at a desired position." x="1913" y="887">
                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tracker = ALProxy( "ALTracker" )

        self.x = 0.0
        self.y = 0.0
        self.z = 0.0

        self.maxSpeed = 0.5

        self.useWholeBody = False
        self.frame = 0 #FRAME TORSO

    def onLoad(self):
        self.BIND_PYTHON(self.getName(), "setParameter")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.x = self.getParameter("X (m)")
        self.y = self.getParameter("Y (m)")
        self.z = self.getParameter("Z (m)")

        self.maxSpeed = self.getParameter("Speed (%)") / 100.0
        self.useWholeBody = self.getParameter("WholeBody")

        frameStr = self.getParameter("Frame")
        if frameStr == "Torso":
            self.frame = 0
        elif frameStr == "World":
            self.frame = 1
        elif frameStr == "Robot":
            self.frame = 2

        self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        pass

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)

        if (parameterName == "X (m)"):
            self.x = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Y (m)"):
            self.y = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Z (m)"):
            self.z = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Speed (%)"):
            self.maxSpeed = newValue / 100.0
            return

        if (parameterName == "WholeBody"):
            self.useWholeBody = newValue
            return

        if (parameterName == "Frame"):
            if(newValue == "Torso"):
                self.frame = 0
            elif newValue == "World":
                self.frame = 1
            elif newValue == "Robot":
                self.frame = 2]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="X (m)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.001" max="10" tooltip="X coordinate of the target to look at." id="5" />
                            <Parameter name="Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-10" max="10" tooltip="Y coordinate of the target to look at." id="6" />
                            <Parameter name="Z (m)" inherits_from_parent="0" content_type="2" value="5" default_value="0" min="-10" max="10" tooltip="Z coordinate of the target to look at." id="7" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="50" default_value="50" min="1" max="100" tooltip="Speed to move the head towards the desired position." id="8" />
                            <Parameter name="WholeBody" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Use whole body constraints" id="9" />
                            <Parameter name="Frame" inherits_from_parent="0" content_type="3" value="Torso" default_value="Torso" custom_choice="0" tooltip="Select the frame of target." id="10">
                                <Choice value="Torso" />
                                <Choice value="World" />
                                <Choice value="Robot" />
                            </Parameter>
                        </Box>
                        <Box name="Op_plaats (6)" id="10" localization="8" tooltip="" x="1616" y="754">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Op_plaats" id="2" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="142" y="63">
                                                <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                                                <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                                                <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                                                <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                                                <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                                                <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                                                <Resource name="Legs" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Stand Up" id="1" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="322" y="66">
                                                <bitmap>media/images/box/movement/stand.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="StandUpBehavior">
                                                        <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                            <Diagram>
                                                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                    <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                        <Choice value="Crouch" />
                                                                        <Choice value="LyingBack" />
                                                                        <Choice value="LyingBelly" />
                                                                        <Choice value="Sit" />
                                                                        <Choice value="SitRelax" />
                                                                        <Choice value="StandInit" />
                                                                        <Choice value="Stand" />
                                                                        <Choice value="StandZero" />
                                                                    </Parameter>
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                    <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                    <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="5" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Vuisten_maken (5)" id="31" localization="8" tooltip="" x="1765" y="744">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Timeline" id="6" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="139" y="51">
                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="101">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram />
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="">
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                            <Key frame="13" value="-2" />
                                                            <Key frame="26" value="-2" />
                                                            <Key frame="38" value="-2" />
                                                            <Key frame="51" value="-2" />
                                                            <Key frame="63" value="-2" />
                                                            <Key frame="76" value="-2" />
                                                            <Key frame="88" value="-2" />
                                                            <Key frame="101" value="-2" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-4.74855" />
                                                            <Key frame="26" value="-4.74855" />
                                                            <Key frame="38" value="-4.74855" />
                                                            <Key frame="51" value="-4.74855" />
                                                            <Key frame="63" value="-4.83644" />
                                                            <Key frame="76" value="-4.83644" />
                                                            <Key frame="88" value="-4.83644" />
                                                            <Key frame="101" value="-4.83644" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                            <Key frame="13" value="0.6732" />
                                                            <Key frame="26" value="0.6732" />
                                                            <Key frame="38" value="0.6732" />
                                                            <Key frame="51" value="0.6732" />
                                                            <Key frame="63" value="0.6732" />
                                                            <Key frame="76" value="0.6732" />
                                                            <Key frame="88" value="0.6732" />
                                                            <Key frame="101" value="0.6732" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                            <Key frame="13" value="62.9281" />
                                                            <Key frame="26" value="60.8187" />
                                                            <Key frame="38" value="44.9982" />
                                                            <Key frame="51" value="18.7185" />
                                                            <Key frame="63" value="2.81013" />
                                                            <Key frame="76" value="-4.22121" />
                                                            <Key frame="88" value="-4.22121" />
                                                            <Key frame="101" value="-4.22121" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                            <Key frame="13" value="3.86484" />
                                                            <Key frame="26" value="4.04062" />
                                                            <Key frame="38" value="4.30429" />
                                                            <Key frame="51" value="4.48007" />
                                                            <Key frame="63" value="4.39218" />
                                                            <Key frame="76" value="4.30429" />
                                                            <Key frame="88" value="4.12851" />
                                                            <Key frame="101" value="4.12851" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-1.84813" />
                                                            <Key frame="26" value="-1.84813" />
                                                            <Key frame="38" value="-1.84813" />
                                                            <Key frame="51" value="-1.84813" />
                                                            <Key frame="63" value="-1.84813" />
                                                            <Key frame="76" value="-1.84813" />
                                                            <Key frame="88" value="-1.84813" />
                                                            <Key frame="101" value="-1.84813" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                            <Key frame="13" value="2" />
                                                            <Key frame="26" value="2" />
                                                            <Key frame="38" value="2" />
                                                            <Key frame="51" value="2" />
                                                            <Key frame="63" value="2" />
                                                            <Key frame="76" value="2" />
                                                            <Key frame="88" value="2" />
                                                            <Key frame="101" value="2" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-11.692" />
                                                            <Key frame="26" value="-11.692" />
                                                            <Key frame="38" value="-11.6041" />
                                                            <Key frame="51" value="-11.7799" />
                                                            <Key frame="63" value="-11.7799" />
                                                            <Key frame="76" value="-11.7799" />
                                                            <Key frame="88" value="-11.7799" />
                                                            <Key frame="101" value="-11.7799" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                            <Key frame="13" value="0.5912" />
                                                            <Key frame="26" value="0.5908" />
                                                            <Key frame="38" value="0.5908" />
                                                            <Key frame="51" value="0.5912" />
                                                            <Key frame="63" value="0.5912" />
                                                            <Key frame="76" value="0.5908" />
                                                            <Key frame="88" value="0.5908" />
                                                            <Key frame="101" value="0.5908" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                            <Key frame="13" value="54.1437" />
                                                            <Key frame="26" value="53.7042" />
                                                            <Key frame="38" value="42.8936" />
                                                            <Key frame="51" value="16.0866" />
                                                            <Key frame="63" value="3.95753" />
                                                            <Key frame="76" value="-1.22808" />
                                                            <Key frame="88" value="-1.22808" />
                                                            <Key frame="101" value="-1.22808" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                            <Key frame="13" value="-2.81494" />
                                                            <Key frame="26" value="-2.72705" />
                                                            <Key frame="38" value="-2.81494" />
                                                            <Key frame="51" value="-2.99072" />
                                                            <Key frame="63" value="-2.99072" />
                                                            <Key frame="76" value="-2.99072" />
                                                            <Key frame="88" value="-3.1665" />
                                                            <Key frame="101" value="-3.25439" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                            <Key frame="13" value="19.8611" />
                                                            <Key frame="26" value="19.8611" />
                                                            <Key frame="38" value="19.8611" />
                                                            <Key frame="51" value="19.8611" />
                                                            <Key frame="63" value="19.8611" />
                                                            <Key frame="76" value="19.8611" />
                                                            <Key frame="88" value="19.8611" />
                                                            <Key frame="101" value="19.8611" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="Hands" id="7" localization="8" tooltip="the robot stiffens the motors of one or both of his hands so that he can open or close&#x0A;it/them. Then he relaxes the motors of his hand(s)." x="310" y="54">
                                                <bitmap>media/images/box/movement/move_arm.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy( "ALMotion" )
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        try:
            hands = []
            if( self.getParameter("Side") in ["Left", "Both"] ):
                hands.append( "LHand" )
            if( self.getParameter("Side") in ["Right", "Both"] ):
                hands.append( "RHand" )
            ids = []
            for hand in hands:
                if( self.getParameter("Action") == "Open the hand" ):
                    ids.append( self.motion.post.openHand(hand) )
                else:
                    ids.append( self.motion.post.closeHand(hand) )
            for id in ids:
                self.motion.wait( id, 0 )
        finally:
            self.bIsRunning = False
            self.onDone() # activate output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the hand to move or both of them." id="4">
                                                    <Choice value="Both" />
                                                    <Choice value="Left" />
                                                    <Choice value="Right" />
                                                </Parameter>
                                                <Parameter name="Action" inherits_from_parent="0" content_type="3" value="Close the hand" default_value="Open the hand" custom_choice="0" tooltip="Action you want to make on the robot&apos;s hand." id="5">
                                                    <Choice value="Open the hand" />
                                                    <Choice value="Close the hand" />
                                                </Parameter>
                                            </Box>
                                            <Link inputowner="7" indexofinput="2" outputowner="6" indexofoutput="4" />
                                            <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Duimen_omhoog (4)" id="32" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1604" y="903">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="20">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="13" value="0.0152" />
                                        <Key frame="20" value="0.0152" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="39.8125" />
                                        <Key frame="20" value="-62.2297" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-49.4855" />
                                        <Key frame="20" value="52.1174" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Wait (8)" id="33" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="1768" y="882">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="Wait (9)" id="34" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="1404" y="1038">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="11" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="Look At (3)" id="35" localization="-1" tooltip="This box makes the robot look at a desired position." x="1905" y="1171">
                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tracker = ALProxy( "ALTracker" )

        self.x = 0.0
        self.y = 0.0
        self.z = 0.0

        self.maxSpeed = 0.5

        self.useWholeBody = False
        self.frame = 0 #FRAME TORSO

    def onLoad(self):
        self.BIND_PYTHON(self.getName(), "setParameter")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.x = self.getParameter("X (m)")
        self.y = self.getParameter("Y (m)")
        self.z = self.getParameter("Z (m)")

        self.maxSpeed = self.getParameter("Speed (%)") / 100.0
        self.useWholeBody = self.getParameter("WholeBody")

        frameStr = self.getParameter("Frame")
        if frameStr == "Torso":
            self.frame = 0
        elif frameStr == "World":
            self.frame = 1
        elif frameStr == "Robot":
            self.frame = 2

        self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        pass

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)

        if (parameterName == "X (m)"):
            self.x = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Y (m)"):
            self.y = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Z (m)"):
            self.z = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Speed (%)"):
            self.maxSpeed = newValue / 100.0
            return

        if (parameterName == "WholeBody"):
            self.useWholeBody = newValue
            return

        if (parameterName == "Frame"):
            if(newValue == "Torso"):
                self.frame = 0
            elif newValue == "World":
                self.frame = 1
            elif newValue == "Robot":
                self.frame = 2]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="X (m)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.001" max="10" tooltip="X coordinate of the target to look at." id="5" />
                            <Parameter name="Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-10" max="10" tooltip="Y coordinate of the target to look at." id="6" />
                            <Parameter name="Z (m)" inherits_from_parent="0" content_type="2" value="5" default_value="0" min="-10" max="10" tooltip="Z coordinate of the target to look at." id="7" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="50" default_value="50" min="1" max="100" tooltip="Speed to move the head towards the desired position." id="8" />
                            <Parameter name="WholeBody" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Use whole body constraints" id="9" />
                            <Parameter name="Frame" inherits_from_parent="0" content_type="3" value="Torso" default_value="Torso" custom_choice="0" tooltip="Select the frame of target." id="10">
                                <Choice value="Torso" />
                                <Choice value="World" />
                                <Choice value="Robot" />
                            </Parameter>
                        </Box>
                        <Box name="Op_plaats (7)" id="36" localization="8" tooltip="" x="1608" y="1038">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Op_plaats" id="2" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="142" y="63">
                                                <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                                                <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                                                <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                                                <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                                                <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                                                <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                                                <Resource name="Legs" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Stand Up" id="1" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="322" y="66">
                                                <bitmap>media/images/box/movement/stand.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="StandUpBehavior">
                                                        <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                            <Diagram>
                                                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                    <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                        <Choice value="Crouch" />
                                                                        <Choice value="LyingBack" />
                                                                        <Choice value="LyingBelly" />
                                                                        <Choice value="Sit" />
                                                                        <Choice value="SitRelax" />
                                                                        <Choice value="StandInit" />
                                                                        <Choice value="Stand" />
                                                                        <Choice value="StandZero" />
                                                                    </Parameter>
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                    <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                    <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="5" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Vuisten_maken (6)" id="37" localization="8" tooltip="" x="1757" y="1028">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Timeline" id="6" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="139" y="51">
                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="101">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram />
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="">
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                            <Key frame="13" value="-2" />
                                                            <Key frame="26" value="-2" />
                                                            <Key frame="38" value="-2" />
                                                            <Key frame="51" value="-2" />
                                                            <Key frame="63" value="-2" />
                                                            <Key frame="76" value="-2" />
                                                            <Key frame="88" value="-2" />
                                                            <Key frame="101" value="-2" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-4.74855" />
                                                            <Key frame="26" value="-4.74855" />
                                                            <Key frame="38" value="-4.74855" />
                                                            <Key frame="51" value="-4.74855" />
                                                            <Key frame="63" value="-4.83644" />
                                                            <Key frame="76" value="-4.83644" />
                                                            <Key frame="88" value="-4.83644" />
                                                            <Key frame="101" value="-4.83644" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                            <Key frame="13" value="0.6732" />
                                                            <Key frame="26" value="0.6732" />
                                                            <Key frame="38" value="0.6732" />
                                                            <Key frame="51" value="0.6732" />
                                                            <Key frame="63" value="0.6732" />
                                                            <Key frame="76" value="0.6732" />
                                                            <Key frame="88" value="0.6732" />
                                                            <Key frame="101" value="0.6732" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                            <Key frame="13" value="62.9281" />
                                                            <Key frame="26" value="60.8187" />
                                                            <Key frame="38" value="44.9982" />
                                                            <Key frame="51" value="18.7185" />
                                                            <Key frame="63" value="2.81013" />
                                                            <Key frame="76" value="-4.22121" />
                                                            <Key frame="88" value="-4.22121" />
                                                            <Key frame="101" value="-4.22121" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                            <Key frame="13" value="3.86484" />
                                                            <Key frame="26" value="4.04062" />
                                                            <Key frame="38" value="4.30429" />
                                                            <Key frame="51" value="4.48007" />
                                                            <Key frame="63" value="4.39218" />
                                                            <Key frame="76" value="4.30429" />
                                                            <Key frame="88" value="4.12851" />
                                                            <Key frame="101" value="4.12851" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-1.84813" />
                                                            <Key frame="26" value="-1.84813" />
                                                            <Key frame="38" value="-1.84813" />
                                                            <Key frame="51" value="-1.84813" />
                                                            <Key frame="63" value="-1.84813" />
                                                            <Key frame="76" value="-1.84813" />
                                                            <Key frame="88" value="-1.84813" />
                                                            <Key frame="101" value="-1.84813" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                            <Key frame="13" value="2" />
                                                            <Key frame="26" value="2" />
                                                            <Key frame="38" value="2" />
                                                            <Key frame="51" value="2" />
                                                            <Key frame="63" value="2" />
                                                            <Key frame="76" value="2" />
                                                            <Key frame="88" value="2" />
                                                            <Key frame="101" value="2" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                            <Key frame="13" value="-11.692" />
                                                            <Key frame="26" value="-11.692" />
                                                            <Key frame="38" value="-11.6041" />
                                                            <Key frame="51" value="-11.7799" />
                                                            <Key frame="63" value="-11.7799" />
                                                            <Key frame="76" value="-11.7799" />
                                                            <Key frame="88" value="-11.7799" />
                                                            <Key frame="101" value="-11.7799" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                            <Key frame="13" value="0.5912" />
                                                            <Key frame="26" value="0.5908" />
                                                            <Key frame="38" value="0.5908" />
                                                            <Key frame="51" value="0.5912" />
                                                            <Key frame="63" value="0.5912" />
                                                            <Key frame="76" value="0.5908" />
                                                            <Key frame="88" value="0.5908" />
                                                            <Key frame="101" value="0.5908" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                            <Key frame="13" value="54.1437" />
                                                            <Key frame="26" value="53.7042" />
                                                            <Key frame="38" value="42.8936" />
                                                            <Key frame="51" value="16.0866" />
                                                            <Key frame="63" value="3.95753" />
                                                            <Key frame="76" value="-1.22808" />
                                                            <Key frame="88" value="-1.22808" />
                                                            <Key frame="101" value="-1.22808" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                            <Key frame="13" value="-2.81494" />
                                                            <Key frame="26" value="-2.72705" />
                                                            <Key frame="38" value="-2.81494" />
                                                            <Key frame="51" value="-2.99072" />
                                                            <Key frame="63" value="-2.99072" />
                                                            <Key frame="76" value="-2.99072" />
                                                            <Key frame="88" value="-3.1665" />
                                                            <Key frame="101" value="-3.25439" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                            <Key frame="13" value="19.8611" />
                                                            <Key frame="26" value="19.8611" />
                                                            <Key frame="38" value="19.8611" />
                                                            <Key frame="51" value="19.8611" />
                                                            <Key frame="63" value="19.8611" />
                                                            <Key frame="76" value="19.8611" />
                                                            <Key frame="88" value="19.8611" />
                                                            <Key frame="101" value="19.8611" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="Hands" id="7" localization="8" tooltip="the robot stiffens the motors of one or both of his hands so that he can open or close&#x0A;it/them. Then he relaxes the motors of his hand(s)." x="310" y="54">
                                                <bitmap>media/images/box/movement/move_arm.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy( "ALMotion" )
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        try:
            hands = []
            if( self.getParameter("Side") in ["Left", "Both"] ):
                hands.append( "LHand" )
            if( self.getParameter("Side") in ["Right", "Both"] ):
                hands.append( "RHand" )
            ids = []
            for hand in hands:
                if( self.getParameter("Action") == "Open the hand" ):
                    ids.append( self.motion.post.openHand(hand) )
                else:
                    ids.append( self.motion.post.closeHand(hand) )
            for id in ids:
                self.motion.wait( id, 0 )
        finally:
            self.bIsRunning = False
            self.onDone() # activate output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the hand to move or both of them." id="4">
                                                    <Choice value="Both" />
                                                    <Choice value="Left" />
                                                    <Choice value="Right" />
                                                </Parameter>
                                                <Parameter name="Action" inherits_from_parent="0" content_type="3" value="Close the hand" default_value="Open the hand" custom_choice="0" tooltip="Action you want to make on the robot&apos;s hand." id="5">
                                                    <Choice value="Open the hand" />
                                                    <Choice value="Close the hand" />
                                                </Parameter>
                                            </Box>
                                            <Link inputowner="7" indexofinput="2" outputowner="6" indexofoutput="4" />
                                            <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Duimen_omhoog (5)" id="38" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="1596" y="1187">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="20">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="13" value="0.0152" />
                                        <Key frame="20" value="0.0152" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="39.8125" />
                                        <Key frame="20" value="-62.2297" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-49.4855" />
                                        <Key frame="20" value="52.1174" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Wait (10)" id="39" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="1760" y="1166">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="Strek_armen" id="40" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="241" y="254">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="63">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="79.2759" />
                                        <Key frame="26" value="77.1665" />
                                        <Key frame="38" value="32.6933" />
                                        <Key frame="51" value="-0.178186" />
                                        <Key frame="63" value="1.93121" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-25.9305" />
                                        <Key frame="26" value="-25.9305" />
                                        <Key frame="38" value="-25.9305" />
                                        <Key frame="51" value="-13.0983" />
                                        <Key frame="63" value="58.0061" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="77.2592" />
                                        <Key frame="26" value="72.9525" />
                                        <Key frame="38" value="33.0497" />
                                        <Key frame="51" value="-0.964409" />
                                        <Key frame="63" value="-0.43705" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="20.3885" />
                                        <Key frame="26" value="20.3885" />
                                        <Key frame="38" value="20.3006" />
                                        <Key frame="51" value="-6.85796" />
                                        <Key frame="63" value="-62.9329" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Stand Up (1)" id="41" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="1197" y="830">
                            <bitmap>media/images/box/movement/stand.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                            <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="StandUpBehavior">
                                    <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                            <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                    <Choice value="Crouch" />
                                                    <Choice value="LyingBack" />
                                                    <Choice value="LyingBelly" />
                                                    <Choice value="Sit" />
                                                    <Choice value="SitRelax" />
                                                    <Choice value="StandInit" />
                                                    <Choice value="Stand" />
                                                    <Choice value="StandZero" />
                                                </Parameter>
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                <Resource name="All motors" type="Lock" timeout="0" />
                                                <Resource name="Stiffness" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="All motors" type="Lock" timeout="0" />
                        </Box>
                        <Box name="wawa" id="42" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="371" y="254">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="176">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="13" value="-38.4063" />
                                        <Key frame="26" value="-42.0098" />
                                        <Key frame="38" value="-39.6368" />
                                        <Key frame="51" value="-43.9435" />
                                        <Key frame="63" value="-41.1309" />
                                        <Key frame="76" value="-45.4376" />
                                        <Key frame="88" value="-41.8341" />
                                        <Key frame="101" value="-46.0529" />
                                        <Key frame="113" value="-43.0645" />
                                        <Key frame="126" value="-47.0197" />
                                        <Key frame="138" value="-44.0313" />
                                        <Key frame="151" value="-48.6017" />
                                        <Key frame="163" value="-46.3165" />
                                        <Key frame="176" value="-50.008" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="13" value="-91.4977" />
                                        <Key frame="26" value="-91.5856" />
                                        <Key frame="38" value="-91.4977" />
                                        <Key frame="51" value="-91.5856" />
                                        <Key frame="63" value="-91.4098" />
                                        <Key frame="76" value="-91.5856" />
                                        <Key frame="88" value="-91.1461" />
                                        <Key frame="101" value="-91.4977" />
                                        <Key frame="113" value="-91.3219" />
                                        <Key frame="126" value="-91.4977" />
                                        <Key frame="138" value="-91.234" />
                                        <Key frame="151" value="-91.4977" />
                                        <Key frame="163" value="-91.3219" />
                                        <Key frame="176" value="-91.4977" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="57.3909" />
                                        <Key frame="26" value="6.76526" />
                                        <Key frame="38" value="58.4456" />
                                        <Key frame="51" value="13.0935" />
                                        <Key frame="63" value="60.3792" />
                                        <Key frame="76" value="10.193" />
                                        <Key frame="88" value="59.764" />
                                        <Key frame="101" value="7.3805" />
                                        <Key frame="113" value="53.7873" />
                                        <Key frame="126" value="7.55628" />
                                        <Key frame="138" value="59.764" />
                                        <Key frame="151" value="11.863" />
                                        <Key frame="163" value="61.346" />
                                        <Key frame="176" value="9.75358" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="-13.8014" />
                                        <Key frame="26" value="-16.5261" />
                                        <Key frame="38" value="-16.2624" />
                                        <Key frame="51" value="-14.5924" />
                                        <Key frame="63" value="-14.4166" />
                                        <Key frame="76" value="-14.0651" />
                                        <Key frame="88" value="-15.0319" />
                                        <Key frame="101" value="-16.9655" />
                                        <Key frame="113" value="-15.9987" />
                                        <Key frame="126" value="-15.9108" />
                                        <Key frame="138" value="-14.5045" />
                                        <Key frame="151" value="-12.1315" />
                                        <Key frame="163" value="-14.2409" />
                                        <Key frame="176" value="-14.6803" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="13" value="36.5654" />
                                        <Key frame="26" value="35.3349" />
                                        <Key frame="38" value="37.0927" />
                                        <Key frame="51" value="34.8954" />
                                        <Key frame="63" value="38.1474" />
                                        <Key frame="76" value="34.1044" />
                                        <Key frame="88" value="37.708" />
                                        <Key frame="101" value="33.7528" />
                                        <Key frame="113" value="37.5322" />
                                        <Key frame="126" value="34.0165" />
                                        <Key frame="138" value="37.3564" />
                                        <Key frame="151" value="36.3017" />
                                        <Key frame="163" value="38.499" />
                                        <Key frame="176" value="34.5439" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="13" value="93.0749" />
                                        <Key frame="26" value="92.8113" />
                                        <Key frame="38" value="93.1628" />
                                        <Key frame="51" value="93.1628" />
                                        <Key frame="63" value="93.2507" />
                                        <Key frame="76" value="93.2507" />
                                        <Key frame="88" value="93.6023" />
                                        <Key frame="101" value="93.6902" />
                                        <Key frame="113" value="93.4265" />
                                        <Key frame="126" value="93.4265" />
                                        <Key frame="138" value="93.6902" />
                                        <Key frame="151" value="93.1628" />
                                        <Key frame="163" value="93.7781" />
                                        <Key frame="176" value="93.6902" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="18.6354" />
                                        <Key frame="26" value="67.8548" />
                                        <Key frame="38" value="11.1647" />
                                        <Key frame="51" value="60.384" />
                                        <Key frame="63" value="14.944" />
                                        <Key frame="76" value="60.4719" />
                                        <Key frame="88" value="-0.173378" />
                                        <Key frame="101" value="55.4621" />
                                        <Key frame="113" value="6.41851" />
                                        <Key frame="126" value="59.8567" />
                                        <Key frame="138" value="11.0768" />
                                        <Key frame="151" value="64.2513" />
                                        <Key frame="163" value="3.34228" />
                                        <Key frame="176" value="58.011" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="10.5446" />
                                        <Key frame="26" value="11.4235" />
                                        <Key frame="38" value="13.0935" />
                                        <Key frame="51" value="12.9177" />
                                        <Key frame="63" value="11.2477" />
                                        <Key frame="76" value="14.2361" />
                                        <Key frame="88" value="11.2477" />
                                        <Key frame="101" value="16.7849" />
                                        <Key frame="113" value="14.9392" />
                                        <Key frame="126" value="16.4334" />
                                        <Key frame="138" value="15.8181" />
                                        <Key frame="151" value="14.6755" />
                                        <Key frame="163" value="12.0388" />
                                        <Key frame="176" value="18" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Op_plaats (8)" id="43" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="94" y="377">
                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                            <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                            <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                            <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                            <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                            <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                            <Resource name="Legs" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Hands" id="44" localization="8" tooltip="the robot stiffens the motors of one or both of his hands so that he can open or close&#x0A;it/them. Then he relaxes the motors of his hand(s)." x="396" y="383">
                            <bitmap>media/images/box/movement/move_arm.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy( "ALMotion" )
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        try:
            hands = []
            if( self.getParameter("Side") in ["Left", "Both"] ):
                hands.append( "LHand" )
            if( self.getParameter("Side") in ["Right", "Both"] ):
                hands.append( "RHand" )
            ids = []
            for hand in hands:
                if( self.getParameter("Action") == "Open the hand" ):
                    ids.append( self.motion.post.openHand(hand) )
                else:
                    ids.append( self.motion.post.closeHand(hand) )
            for id in ids:
                self.motion.wait( id, 0 )
        finally:
            self.bIsRunning = False
            self.onDone() # activate output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                            <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the hand to move or both of them." id="4">
                                <Choice value="Both" />
                                <Choice value="Left" />
                                <Choice value="Right" />
                            </Parameter>
                            <Parameter name="Action" inherits_from_parent="0" content_type="3" value="Close the hand" default_value="Open the hand" custom_choice="0" tooltip="Action you want to make on the robot&apos;s hand." id="5">
                                <Choice value="Open the hand" />
                                <Choice value="Close the hand" />
                            </Parameter>
                        </Box>
                        <Box name="Strek_armen (1)" id="46" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="241" y="379">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="63">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="79.2759" />
                                        <Key frame="26" value="77.1665" />
                                        <Key frame="38" value="32.6933" />
                                        <Key frame="51" value="-0.178186" />
                                        <Key frame="63" value="1.93121" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-25.9305" />
                                        <Key frame="26" value="-25.9305" />
                                        <Key frame="38" value="-25.9305" />
                                        <Key frame="51" value="-13.0983" />
                                        <Key frame="63" value="58.0061" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="77.2592" />
                                        <Key frame="26" value="72.9525" />
                                        <Key frame="38" value="33.0497" />
                                        <Key frame="51" value="-0.964409" />
                                        <Key frame="63" value="-0.43705" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="20.3885" />
                                        <Key frame="26" value="20.3885" />
                                        <Key frame="38" value="20.3006" />
                                        <Key frame="51" value="-6.85796" />
                                        <Key frame="63" value="-62.9329" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="wawa (1)" id="47" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="98" y="535">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="176">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="13" value="-38.4063" />
                                        <Key frame="26" value="-42.0098" />
                                        <Key frame="38" value="-39.6368" />
                                        <Key frame="51" value="-43.9435" />
                                        <Key frame="63" value="-41.1309" />
                                        <Key frame="76" value="-45.4376" />
                                        <Key frame="88" value="-41.8341" />
                                        <Key frame="101" value="-46.0529" />
                                        <Key frame="113" value="-43.0645" />
                                        <Key frame="126" value="-47.0197" />
                                        <Key frame="138" value="-44.0313" />
                                        <Key frame="151" value="-48.6017" />
                                        <Key frame="163" value="-46.3165" />
                                        <Key frame="176" value="-50.008" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="13" value="-91.4977" />
                                        <Key frame="26" value="-91.5856" />
                                        <Key frame="38" value="-91.4977" />
                                        <Key frame="51" value="-91.5856" />
                                        <Key frame="63" value="-91.4098" />
                                        <Key frame="76" value="-91.5856" />
                                        <Key frame="88" value="-91.1461" />
                                        <Key frame="101" value="-91.4977" />
                                        <Key frame="113" value="-91.3219" />
                                        <Key frame="126" value="-91.4977" />
                                        <Key frame="138" value="-91.234" />
                                        <Key frame="151" value="-91.4977" />
                                        <Key frame="163" value="-91.3219" />
                                        <Key frame="176" value="-91.4977" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="57.3909" />
                                        <Key frame="26" value="6.76526" />
                                        <Key frame="38" value="58.4456" />
                                        <Key frame="51" value="13.0935" />
                                        <Key frame="63" value="60.3792" />
                                        <Key frame="76" value="10.193" />
                                        <Key frame="88" value="59.764" />
                                        <Key frame="101" value="7.3805" />
                                        <Key frame="113" value="53.7873" />
                                        <Key frame="126" value="7.55628" />
                                        <Key frame="138" value="59.764" />
                                        <Key frame="151" value="11.863" />
                                        <Key frame="163" value="61.346" />
                                        <Key frame="176" value="9.75358" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="-13.8014" />
                                        <Key frame="26" value="-16.5261" />
                                        <Key frame="38" value="-16.2624" />
                                        <Key frame="51" value="-14.5924" />
                                        <Key frame="63" value="-14.4166" />
                                        <Key frame="76" value="-14.0651" />
                                        <Key frame="88" value="-15.0319" />
                                        <Key frame="101" value="-16.9655" />
                                        <Key frame="113" value="-15.9987" />
                                        <Key frame="126" value="-15.9108" />
                                        <Key frame="138" value="-14.5045" />
                                        <Key frame="151" value="-12.1315" />
                                        <Key frame="163" value="-14.2409" />
                                        <Key frame="176" value="-14.6803" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="13" value="36.5654" />
                                        <Key frame="26" value="35.3349" />
                                        <Key frame="38" value="37.0927" />
                                        <Key frame="51" value="34.8954" />
                                        <Key frame="63" value="38.1474" />
                                        <Key frame="76" value="34.1044" />
                                        <Key frame="88" value="37.708" />
                                        <Key frame="101" value="33.7528" />
                                        <Key frame="113" value="37.5322" />
                                        <Key frame="126" value="34.0165" />
                                        <Key frame="138" value="37.3564" />
                                        <Key frame="151" value="36.3017" />
                                        <Key frame="163" value="38.499" />
                                        <Key frame="176" value="34.5439" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="13" value="93.0749" />
                                        <Key frame="26" value="92.8113" />
                                        <Key frame="38" value="93.1628" />
                                        <Key frame="51" value="93.1628" />
                                        <Key frame="63" value="93.2507" />
                                        <Key frame="76" value="93.2507" />
                                        <Key frame="88" value="93.6023" />
                                        <Key frame="101" value="93.6902" />
                                        <Key frame="113" value="93.4265" />
                                        <Key frame="126" value="93.4265" />
                                        <Key frame="138" value="93.6902" />
                                        <Key frame="151" value="93.1628" />
                                        <Key frame="163" value="93.7781" />
                                        <Key frame="176" value="93.6902" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="18.6354" />
                                        <Key frame="26" value="67.8548" />
                                        <Key frame="38" value="11.1647" />
                                        <Key frame="51" value="60.384" />
                                        <Key frame="63" value="14.944" />
                                        <Key frame="76" value="60.4719" />
                                        <Key frame="88" value="-0.173378" />
                                        <Key frame="101" value="55.4621" />
                                        <Key frame="113" value="6.41851" />
                                        <Key frame="126" value="59.8567" />
                                        <Key frame="138" value="11.0768" />
                                        <Key frame="151" value="64.2513" />
                                        <Key frame="163" value="3.34228" />
                                        <Key frame="176" value="58.011" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="10.5446" />
                                        <Key frame="26" value="11.4235" />
                                        <Key frame="38" value="13.0935" />
                                        <Key frame="51" value="12.9177" />
                                        <Key frame="63" value="11.2477" />
                                        <Key frame="76" value="14.2361" />
                                        <Key frame="88" value="11.2477" />
                                        <Key frame="101" value="16.7849" />
                                        <Key frame="113" value="14.9392" />
                                        <Key frame="126" value="16.4334" />
                                        <Key frame="138" value="15.8181" />
                                        <Key frame="151" value="14.6755" />
                                        <Key frame="163" value="12.0388" />
                                        <Key frame="176" value="18" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Op_plaats (9)" id="45" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="239" y="531">
                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                            <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                            <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                            <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                            <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                            <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                            <Resource name="Legs" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Strek_armen (2)" id="48" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="389" y="526">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="63">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="79.2759" />
                                        <Key frame="26" value="77.1665" />
                                        <Key frame="38" value="32.6933" />
                                        <Key frame="51" value="-0.178186" />
                                        <Key frame="63" value="1.93121" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-25.9305" />
                                        <Key frame="26" value="-25.9305" />
                                        <Key frame="38" value="-25.9305" />
                                        <Key frame="51" value="-13.0983" />
                                        <Key frame="63" value="58.0061" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="77.2592" />
                                        <Key frame="26" value="72.9525" />
                                        <Key frame="38" value="33.0497" />
                                        <Key frame="51" value="-0.964409" />
                                        <Key frame="63" value="-0.43705" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="20.3885" />
                                        <Key frame="26" value="20.3885" />
                                        <Key frame="38" value="20.3006" />
                                        <Key frame="51" value="-6.85796" />
                                        <Key frame="63" value="-62.9329" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Hands (1)" id="49" localization="8" tooltip="the robot stiffens the motors of one or both of his hands so that he can open or close&#x0A;it/them. Then he relaxes the motors of his hand(s)." x="112" y="647">
                            <bitmap>media/images/box/movement/move_arm.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy( "ALMotion" )
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        try:
            hands = []
            if( self.getParameter("Side") in ["Left", "Both"] ):
                hands.append( "LHand" )
            if( self.getParameter("Side") in ["Right", "Both"] ):
                hands.append( "RHand" )
            ids = []
            for hand in hands:
                if( self.getParameter("Action") == "Open the hand" ):
                    ids.append( self.motion.post.openHand(hand) )
                else:
                    ids.append( self.motion.post.closeHand(hand) )
            for id in ids:
                self.motion.wait( id, 0 )
        finally:
            self.bIsRunning = False
            self.onDone() # activate output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                            <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the hand to move or both of them." id="4">
                                <Choice value="Both" />
                                <Choice value="Left" />
                                <Choice value="Right" />
                            </Parameter>
                            <Parameter name="Action" inherits_from_parent="0" content_type="3" value="Close the hand" default_value="Open the hand" custom_choice="0" tooltip="Action you want to make on the robot&apos;s hand." id="5">
                                <Choice value="Open the hand" />
                                <Choice value="Close the hand" />
                            </Parameter>
                        </Box>
                        <Box name="Duimen_omhoog" id="50" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="305" y="653">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="38">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="46.4923" />
                                        <Key frame="26" value="15.4665" />
                                        <Key frame="38" value="-36.9169" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-55.55" />
                                        <Key frame="26" value="-33.4013" />
                                        <Key frame="38" value="19.0701" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="wawa2" id="51" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="475" y="642">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="201">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="3.77694" />
                                        <Key frame="26" value="3.51326" />
                                        <Key frame="38" value="5.71056" />
                                        <Key frame="51" value="-0.969218" />
                                        <Key frame="63" value="-0.353968" />
                                        <Key frame="76" value="4.65585" />
                                        <Key frame="88" value="0.788627" />
                                        <Key frame="101" value="2.81013" />
                                        <Key frame="113" value="3.42537" />
                                        <Key frame="126" value="-1.67234" />
                                        <Key frame="138" value="-1.93602" />
                                        <Key frame="151" value="1.40386" />
                                        <Key frame="163" value="0.349159" />
                                        <Key frame="176" value="1.14019" />
                                        <Key frame="188" value="1.14019" />
                                        <Key frame="201" value="-0.529749" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="-2.99072" />
                                        <Key frame="26" value="-13.0983" />
                                        <Key frame="38" value="-18" />
                                        <Key frame="51" value="30.7597" />
                                        <Key frame="63" value="3.86484" />
                                        <Key frame="76" value="-18" />
                                        <Key frame="88" value="33.9238" />
                                        <Key frame="101" value="-8.79157" />
                                        <Key frame="113" value="0.0854867" />
                                        <Key frame="126" value="39.1094" />
                                        <Key frame="138" value="2.63435" />
                                        <Key frame="151" value="-18" />
                                        <Key frame="163" value="14.1482" />
                                        <Key frame="176" value="33.9238" />
                                        <Key frame="188" value="-18" />
                                        <Key frame="201" value="31.9902" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="2.37549" />
                                        <Key frame="26" value="2.46338" />
                                        <Key frame="38" value="1.93602" />
                                        <Key frame="51" value="2.28759" />
                                        <Key frame="63" value="1.76024" />
                                        <Key frame="76" value="-2.1949" />
                                        <Key frame="88" value="-1.57965" />
                                        <Key frame="101" value="-1.31597" />
                                        <Key frame="113" value="-1.57965" />
                                        <Key frame="126" value="-1.57965" />
                                        <Key frame="138" value="-2.0191" />
                                        <Key frame="151" value="-2.0191" />
                                        <Key frame="163" value="-2.1949" />
                                        <Key frame="176" value="-1.14019" />
                                        <Key frame="188" value="-1.75543" />
                                        <Key frame="201" value="-1.75543" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="4.65585" />
                                        <Key frame="26" value="-6.94585" />
                                        <Key frame="38" value="-31.6434" />
                                        <Key frame="51" value="18" />
                                        <Key frame="63" value="-0.353968" />
                                        <Key frame="76" value="-27.4246" />
                                        <Key frame="88" value="15.3786" />
                                        <Key frame="101" value="-15.5592" />
                                        <Key frame="113" value="-6.59429" />
                                        <Key frame="126" value="18" />
                                        <Key frame="138" value="-6.77007" />
                                        <Key frame="151" value="-19.0749" />
                                        <Key frame="163" value="0.173378" />
                                        <Key frame="176" value="18" />
                                        <Key frame="188" value="-21.2722" />
                                        <Key frame="201" value="18" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Schouders_op" id="52" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="439" y="958">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="63">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="81.0338" />
                                        <Key frame="26" value="79.9791" />
                                        <Key frame="38" value="79.2759" />
                                        <Key frame="51" value="79.188" />
                                        <Key frame="63" value="82.5279" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="-1.76024" />
                                        <Key frame="26" value="8.61098" />
                                        <Key frame="38" value="49.217" />
                                        <Key frame="51" value="47.0197" />
                                        <Key frame="63" value="7.20472" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="85.6968" />
                                        <Key frame="26" value="85.8726" />
                                        <Key frame="38" value="75.062" />
                                        <Key frame="51" value="74.4467" />
                                        <Key frame="63" value="80.7749" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="4.48007" />
                                        <Key frame="26" value="-1.93602" />
                                        <Key frame="38" value="-48.6944" />
                                        <Key frame="51" value="-43.4209" />
                                        <Key frame="63" value="-0.969218" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Op_plaats (10)" id="53" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="148" y="803">
                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                            <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                            <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                            <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                            <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                            <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                            <Resource name="Legs" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Duimen_omhoog (6)" id="54" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="287" y="951">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="38">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="46.4923" />
                                        <Key frame="26" value="15.4665" />
                                        <Key frame="38" value="-36.9169" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-55.55" />
                                        <Key frame="26" value="-33.4013" />
                                        <Key frame="38" value="19.0701" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Strek_armen (3)" id="55" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="293" y="799">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="63">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="79.2759" />
                                        <Key frame="26" value="77.1665" />
                                        <Key frame="38" value="32.6933" />
                                        <Key frame="51" value="-0.178186" />
                                        <Key frame="63" value="1.93121" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-25.9305" />
                                        <Key frame="26" value="-25.9305" />
                                        <Key frame="38" value="-25.9305" />
                                        <Key frame="51" value="-13.0983" />
                                        <Key frame="63" value="58.0061" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="77.2592" />
                                        <Key frame="26" value="72.9525" />
                                        <Key frame="38" value="33.0497" />
                                        <Key frame="51" value="-0.964409" />
                                        <Key frame="63" value="-0.43705" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="20.3885" />
                                        <Key frame="26" value="20.3885" />
                                        <Key frame="38" value="20.3006" />
                                        <Key frame="51" value="-6.85796" />
                                        <Key frame="63" value="-62.9329" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Hands (2)" id="56" localization="8" tooltip="the robot stiffens the motors of one or both of his hands so that he can open or close&#x0A;it/them. Then he relaxes the motors of his hand(s)." x="131" y="953">
                            <bitmap>media/images/box/movement/move_arm.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy( "ALMotion" )
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        try:
            hands = []
            if( self.getParameter("Side") in ["Left", "Both"] ):
                hands.append( "LHand" )
            if( self.getParameter("Side") in ["Right", "Both"] ):
                hands.append( "RHand" )
            ids = []
            for hand in hands:
                if( self.getParameter("Action") == "Open the hand" ):
                    ids.append( self.motion.post.openHand(hand) )
                else:
                    ids.append( self.motion.post.closeHand(hand) )
            for id in ids:
                self.motion.wait( id, 0 )
        finally:
            self.bIsRunning = False
            self.onDone() # activate output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                            <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the hand to move or both of them." id="4">
                                <Choice value="Both" />
                                <Choice value="Left" />
                                <Choice value="Right" />
                            </Parameter>
                            <Parameter name="Action" inherits_from_parent="0" content_type="3" value="Close the hand" default_value="Open the hand" custom_choice="0" tooltip="Action you want to make on the robot&apos;s hand." id="5">
                                <Choice value="Open the hand" />
                                <Choice value="Close the hand" />
                            </Parameter>
                        </Box>
                        <Box name="wawa2 (1)" id="57" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="609" y="961">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="201">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="3.77694" />
                                        <Key frame="26" value="3.51326" />
                                        <Key frame="38" value="5.71056" />
                                        <Key frame="51" value="-0.969218" />
                                        <Key frame="63" value="-0.353968" />
                                        <Key frame="76" value="4.65585" />
                                        <Key frame="88" value="0.788627" />
                                        <Key frame="101" value="2.81013" />
                                        <Key frame="113" value="3.42537" />
                                        <Key frame="126" value="-1.67234" />
                                        <Key frame="138" value="-1.93602" />
                                        <Key frame="151" value="1.40386" />
                                        <Key frame="163" value="0.349159" />
                                        <Key frame="176" value="1.14019" />
                                        <Key frame="188" value="1.14019" />
                                        <Key frame="201" value="-0.529749" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="-2.99072" />
                                        <Key frame="26" value="-13.0983" />
                                        <Key frame="38" value="-18" />
                                        <Key frame="51" value="30.7597" />
                                        <Key frame="63" value="3.86484" />
                                        <Key frame="76" value="-18" />
                                        <Key frame="88" value="33.9238" />
                                        <Key frame="101" value="-8.79157" />
                                        <Key frame="113" value="0.0854867" />
                                        <Key frame="126" value="39.1094" />
                                        <Key frame="138" value="2.63435" />
                                        <Key frame="151" value="-18" />
                                        <Key frame="163" value="14.1482" />
                                        <Key frame="176" value="33.9238" />
                                        <Key frame="188" value="-18" />
                                        <Key frame="201" value="31.9902" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="2.37549" />
                                        <Key frame="26" value="2.46338" />
                                        <Key frame="38" value="1.93602" />
                                        <Key frame="51" value="2.28759" />
                                        <Key frame="63" value="1.76024" />
                                        <Key frame="76" value="-2.1949" />
                                        <Key frame="88" value="-1.57965" />
                                        <Key frame="101" value="-1.31597" />
                                        <Key frame="113" value="-1.57965" />
                                        <Key frame="126" value="-1.57965" />
                                        <Key frame="138" value="-2.0191" />
                                        <Key frame="151" value="-2.0191" />
                                        <Key frame="163" value="-2.1949" />
                                        <Key frame="176" value="-1.14019" />
                                        <Key frame="188" value="-1.75543" />
                                        <Key frame="201" value="-1.75543" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="4.65585" />
                                        <Key frame="26" value="-6.94585" />
                                        <Key frame="38" value="-31.6434" />
                                        <Key frame="51" value="18" />
                                        <Key frame="63" value="-0.353968" />
                                        <Key frame="76" value="-27.4246" />
                                        <Key frame="88" value="15.3786" />
                                        <Key frame="101" value="-15.5592" />
                                        <Key frame="113" value="-6.59429" />
                                        <Key frame="126" value="18" />
                                        <Key frame="138" value="-6.77007" />
                                        <Key frame="151" value="-19.0749" />
                                        <Key frame="163" value="0.173378" />
                                        <Key frame="176" value="18" />
                                        <Key frame="188" value="-21.2722" />
                                        <Key frame="201" value="18" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Look At (4)" id="58" localization="-1" tooltip="This box makes the robot look at a desired position." x="152" y="1393">
                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tracker = ALProxy( "ALTracker" )

        self.x = 0.0
        self.y = 0.0
        self.z = 0.0

        self.maxSpeed = 0.5

        self.useWholeBody = False
        self.frame = 0 #FRAME TORSO

    def onLoad(self):
        self.BIND_PYTHON(self.getName(), "setParameter")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.x = self.getParameter("X (m)")
        self.y = self.getParameter("Y (m)")
        self.z = self.getParameter("Z (m)")

        self.maxSpeed = self.getParameter("Speed (%)") / 100.0
        self.useWholeBody = self.getParameter("WholeBody")

        frameStr = self.getParameter("Frame")
        if frameStr == "Torso":
            self.frame = 0
        elif frameStr == "World":
            self.frame = 1
        elif frameStr == "Robot":
            self.frame = 2

        self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        pass

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)

        if (parameterName == "X (m)"):
            self.x = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Y (m)"):
            self.y = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Z (m)"):
            self.z = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Speed (%)"):
            self.maxSpeed = newValue / 100.0
            return

        if (parameterName == "WholeBody"):
            self.useWholeBody = newValue
            return

        if (parameterName == "Frame"):
            if(newValue == "Torso"):
                self.frame = 0
            elif newValue == "World":
                self.frame = 1
            elif newValue == "Robot":
                self.frame = 2]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="X (m)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.001" max="10" tooltip="X coordinate of the target to look at." id="5" />
                            <Parameter name="Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-10" max="10" tooltip="Y coordinate of the target to look at." id="6" />
                            <Parameter name="Z (m)" inherits_from_parent="0" content_type="2" value="5" default_value="0" min="-10" max="10" tooltip="Z coordinate of the target to look at." id="7" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="50" default_value="50" min="1" max="100" tooltip="Speed to move the head towards the desired position." id="8" />
                            <Parameter name="WholeBody" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Use whole body constraints" id="9" />
                            <Parameter name="Frame" inherits_from_parent="0" content_type="3" value="Torso" default_value="Torso" custom_choice="0" tooltip="Select the frame of target." id="10">
                                <Choice value="Torso" />
                                <Choice value="World" />
                                <Choice value="Robot" />
                            </Parameter>
                        </Box>
                        <Box name="Schouders_op (1)" id="59" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="465" y="1260">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="63">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="81.0338" />
                                        <Key frame="26" value="79.9791" />
                                        <Key frame="38" value="79.2759" />
                                        <Key frame="51" value="79.188" />
                                        <Key frame="63" value="82.5279" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="-1.76024" />
                                        <Key frame="26" value="8.61098" />
                                        <Key frame="38" value="49.217" />
                                        <Key frame="51" value="47.0197" />
                                        <Key frame="63" value="7.20472" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="85.6968" />
                                        <Key frame="26" value="85.8726" />
                                        <Key frame="38" value="75.062" />
                                        <Key frame="51" value="74.4467" />
                                        <Key frame="63" value="80.7749" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="4.48007" />
                                        <Key frame="26" value="-1.93602" />
                                        <Key frame="38" value="-48.6944" />
                                        <Key frame="51" value="-43.4209" />
                                        <Key frame="63" value="-0.969218" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Op_plaats (11)" id="60" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="174" y="1105">
                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                            <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                            <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                            <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                            <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                            <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                            <Resource name="Legs" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Duimen_omhoog (7)" id="61" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="313" y="1253">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="38">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="46.4923" />
                                        <Key frame="26" value="15.4665" />
                                        <Key frame="38" value="-36.9169" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-55.55" />
                                        <Key frame="26" value="-33.4013" />
                                        <Key frame="38" value="19.0701" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Strek_armen (4)" id="62" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="319" y="1101">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="63">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="79.2759" />
                                        <Key frame="26" value="77.1665" />
                                        <Key frame="38" value="32.6933" />
                                        <Key frame="51" value="-0.178186" />
                                        <Key frame="63" value="1.93121" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-25.9305" />
                                        <Key frame="26" value="-25.9305" />
                                        <Key frame="38" value="-25.9305" />
                                        <Key frame="51" value="-13.0983" />
                                        <Key frame="63" value="58.0061" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="77.2592" />
                                        <Key frame="26" value="72.9525" />
                                        <Key frame="38" value="33.0497" />
                                        <Key frame="51" value="-0.964409" />
                                        <Key frame="63" value="-0.43705" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="20.3885" />
                                        <Key frame="26" value="20.3885" />
                                        <Key frame="38" value="20.3006" />
                                        <Key frame="51" value="-6.85796" />
                                        <Key frame="63" value="-62.9329" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Hands (3)" id="63" localization="8" tooltip="the robot stiffens the motors of one or both of his hands so that he can open or close&#x0A;it/them. Then he relaxes the motors of his hand(s)." x="157" y="1255">
                            <bitmap>media/images/box/movement/move_arm.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy( "ALMotion" )
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        try:
            hands = []
            if( self.getParameter("Side") in ["Left", "Both"] ):
                hands.append( "LHand" )
            if( self.getParameter("Side") in ["Right", "Both"] ):
                hands.append( "RHand" )
            ids = []
            for hand in hands:
                if( self.getParameter("Action") == "Open the hand" ):
                    ids.append( self.motion.post.openHand(hand) )
                else:
                    ids.append( self.motion.post.closeHand(hand) )
            for id in ids:
                self.motion.wait( id, 0 )
        finally:
            self.bIsRunning = False
            self.onDone() # activate output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                            <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the hand to move or both of them." id="4">
                                <Choice value="Both" />
                                <Choice value="Left" />
                                <Choice value="Right" />
                            </Parameter>
                            <Parameter name="Action" inherits_from_parent="0" content_type="3" value="Close the hand" default_value="Open the hand" custom_choice="0" tooltip="Action you want to make on the robot&apos;s hand." id="5">
                                <Choice value="Open the hand" />
                                <Choice value="Close the hand" />
                            </Parameter>
                        </Box>
                        <Box name="wawa (2)" id="64" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="452" y="1386">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="176">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="13" value="-38.4063" />
                                        <Key frame="26" value="-42.0098" />
                                        <Key frame="38" value="-39.6368" />
                                        <Key frame="51" value="-43.9435" />
                                        <Key frame="63" value="-41.1309" />
                                        <Key frame="76" value="-45.4376" />
                                        <Key frame="88" value="-41.8341" />
                                        <Key frame="101" value="-46.0529" />
                                        <Key frame="113" value="-43.0645" />
                                        <Key frame="126" value="-47.0197" />
                                        <Key frame="138" value="-44.0313" />
                                        <Key frame="151" value="-48.6017" />
                                        <Key frame="163" value="-46.3165" />
                                        <Key frame="176" value="-50.008" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="13" value="-91.4977" />
                                        <Key frame="26" value="-91.5856" />
                                        <Key frame="38" value="-91.4977" />
                                        <Key frame="51" value="-91.5856" />
                                        <Key frame="63" value="-91.4098" />
                                        <Key frame="76" value="-91.5856" />
                                        <Key frame="88" value="-91.1461" />
                                        <Key frame="101" value="-91.4977" />
                                        <Key frame="113" value="-91.3219" />
                                        <Key frame="126" value="-91.4977" />
                                        <Key frame="138" value="-91.234" />
                                        <Key frame="151" value="-91.4977" />
                                        <Key frame="163" value="-91.3219" />
                                        <Key frame="176" value="-91.4977" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="57.3909" />
                                        <Key frame="26" value="6.76526" />
                                        <Key frame="38" value="58.4456" />
                                        <Key frame="51" value="13.0935" />
                                        <Key frame="63" value="60.3792" />
                                        <Key frame="76" value="10.193" />
                                        <Key frame="88" value="59.764" />
                                        <Key frame="101" value="7.3805" />
                                        <Key frame="113" value="53.7873" />
                                        <Key frame="126" value="7.55628" />
                                        <Key frame="138" value="59.764" />
                                        <Key frame="151" value="11.863" />
                                        <Key frame="163" value="61.346" />
                                        <Key frame="176" value="9.75358" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="-13.8014" />
                                        <Key frame="26" value="-16.5261" />
                                        <Key frame="38" value="-16.2624" />
                                        <Key frame="51" value="-14.5924" />
                                        <Key frame="63" value="-14.4166" />
                                        <Key frame="76" value="-14.0651" />
                                        <Key frame="88" value="-15.0319" />
                                        <Key frame="101" value="-16.9655" />
                                        <Key frame="113" value="-15.9987" />
                                        <Key frame="126" value="-15.9108" />
                                        <Key frame="138" value="-14.5045" />
                                        <Key frame="151" value="-12.1315" />
                                        <Key frame="163" value="-14.2409" />
                                        <Key frame="176" value="-14.6803" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="13" value="36.5654" />
                                        <Key frame="26" value="35.3349" />
                                        <Key frame="38" value="37.0927" />
                                        <Key frame="51" value="34.8954" />
                                        <Key frame="63" value="38.1474" />
                                        <Key frame="76" value="34.1044" />
                                        <Key frame="88" value="37.708" />
                                        <Key frame="101" value="33.7528" />
                                        <Key frame="113" value="37.5322" />
                                        <Key frame="126" value="34.0165" />
                                        <Key frame="138" value="37.3564" />
                                        <Key frame="151" value="36.3017" />
                                        <Key frame="163" value="38.499" />
                                        <Key frame="176" value="34.5439" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="13" value="93.0749" />
                                        <Key frame="26" value="92.8113" />
                                        <Key frame="38" value="93.1628" />
                                        <Key frame="51" value="93.1628" />
                                        <Key frame="63" value="93.2507" />
                                        <Key frame="76" value="93.2507" />
                                        <Key frame="88" value="93.6023" />
                                        <Key frame="101" value="93.6902" />
                                        <Key frame="113" value="93.4265" />
                                        <Key frame="126" value="93.4265" />
                                        <Key frame="138" value="93.6902" />
                                        <Key frame="151" value="93.1628" />
                                        <Key frame="163" value="93.7781" />
                                        <Key frame="176" value="93.6902" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="18.6354" />
                                        <Key frame="26" value="67.8548" />
                                        <Key frame="38" value="11.1647" />
                                        <Key frame="51" value="60.384" />
                                        <Key frame="63" value="14.944" />
                                        <Key frame="76" value="60.4719" />
                                        <Key frame="88" value="-0.173378" />
                                        <Key frame="101" value="55.4621" />
                                        <Key frame="113" value="6.41851" />
                                        <Key frame="126" value="59.8567" />
                                        <Key frame="138" value="11.0768" />
                                        <Key frame="151" value="64.2513" />
                                        <Key frame="163" value="3.34228" />
                                        <Key frame="176" value="58.011" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="10.5446" />
                                        <Key frame="26" value="11.4235" />
                                        <Key frame="38" value="13.0935" />
                                        <Key frame="51" value="12.9177" />
                                        <Key frame="63" value="11.2477" />
                                        <Key frame="76" value="14.2361" />
                                        <Key frame="88" value="11.2477" />
                                        <Key frame="101" value="16.7849" />
                                        <Key frame="113" value="14.9392" />
                                        <Key frame="126" value="16.4334" />
                                        <Key frame="138" value="15.8181" />
                                        <Key frame="151" value="14.6755" />
                                        <Key frame="163" value="12.0388" />
                                        <Key frame="176" value="18" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Look At (5)" id="66" localization="-1" tooltip="This box makes the robot look at a desired position." x="206" y="1843">
                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tracker = ALProxy( "ALTracker" )

        self.x = 0.0
        self.y = 0.0
        self.z = 0.0

        self.maxSpeed = 0.5

        self.useWholeBody = False
        self.frame = 0 #FRAME TORSO

    def onLoad(self):
        self.BIND_PYTHON(self.getName(), "setParameter")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.x = self.getParameter("X (m)")
        self.y = self.getParameter("Y (m)")
        self.z = self.getParameter("Z (m)")

        self.maxSpeed = self.getParameter("Speed (%)") / 100.0
        self.useWholeBody = self.getParameter("WholeBody")

        frameStr = self.getParameter("Frame")
        if frameStr == "Torso":
            self.frame = 0
        elif frameStr == "World":
            self.frame = 1
        elif frameStr == "Robot":
            self.frame = 2

        self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        pass

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)

        if (parameterName == "X (m)"):
            self.x = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Y (m)"):
            self.y = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Z (m)"):
            self.z = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Speed (%)"):
            self.maxSpeed = newValue / 100.0
            return

        if (parameterName == "WholeBody"):
            self.useWholeBody = newValue
            return

        if (parameterName == "Frame"):
            if(newValue == "Torso"):
                self.frame = 0
            elif newValue == "World":
                self.frame = 1
            elif newValue == "Robot":
                self.frame = 2]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="X (m)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.001" max="10" tooltip="X coordinate of the target to look at." id="5" />
                            <Parameter name="Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-10" max="10" tooltip="Y coordinate of the target to look at." id="6" />
                            <Parameter name="Z (m)" inherits_from_parent="0" content_type="2" value="5" default_value="0" min="-10" max="10" tooltip="Z coordinate of the target to look at." id="7" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="50" default_value="50" min="1" max="100" tooltip="Speed to move the head towards the desired position." id="8" />
                            <Parameter name="WholeBody" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Use whole body constraints" id="9" />
                            <Parameter name="Frame" inherits_from_parent="0" content_type="3" value="Torso" default_value="Torso" custom_choice="0" tooltip="Select the frame of target." id="10">
                                <Choice value="Torso" />
                                <Choice value="World" />
                                <Choice value="Robot" />
                            </Parameter>
                        </Box>
                        <Box name="Schouders_op (2)" id="67" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="492" y="1708">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="63">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="81.0338" />
                                        <Key frame="26" value="79.9791" />
                                        <Key frame="38" value="79.2759" />
                                        <Key frame="51" value="79.188" />
                                        <Key frame="63" value="82.5279" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="-1.76024" />
                                        <Key frame="26" value="8.61098" />
                                        <Key frame="38" value="49.217" />
                                        <Key frame="51" value="47.0197" />
                                        <Key frame="63" value="7.20472" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="85.6968" />
                                        <Key frame="26" value="85.8726" />
                                        <Key frame="38" value="75.062" />
                                        <Key frame="51" value="74.4467" />
                                        <Key frame="63" value="80.7749" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="4.48007" />
                                        <Key frame="26" value="-1.93602" />
                                        <Key frame="38" value="-48.6944" />
                                        <Key frame="51" value="-43.4209" />
                                        <Key frame="63" value="-0.969218" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Op_plaats (12)" id="68" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="201" y="1553">
                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                            <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                            <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                            <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                            <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                            <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                            <Resource name="Legs" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Duimen_omhoog (8)" id="69" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="340" y="1701">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="38">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="46.4923" />
                                        <Key frame="26" value="15.4665" />
                                        <Key frame="38" value="-36.9169" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-55.55" />
                                        <Key frame="26" value="-33.4013" />
                                        <Key frame="38" value="19.0701" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Strek_armen (5)" id="70" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="346" y="1549">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="63">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="79.2759" />
                                        <Key frame="26" value="77.1665" />
                                        <Key frame="38" value="32.6933" />
                                        <Key frame="51" value="-0.178186" />
                                        <Key frame="63" value="1.93121" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-25.9305" />
                                        <Key frame="26" value="-25.9305" />
                                        <Key frame="38" value="-25.9305" />
                                        <Key frame="51" value="-13.0983" />
                                        <Key frame="63" value="58.0061" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="77.2592" />
                                        <Key frame="26" value="72.9525" />
                                        <Key frame="38" value="33.0497" />
                                        <Key frame="51" value="-0.964409" />
                                        <Key frame="63" value="-0.43705" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="20.3885" />
                                        <Key frame="26" value="20.3885" />
                                        <Key frame="38" value="20.3006" />
                                        <Key frame="51" value="-6.85796" />
                                        <Key frame="63" value="-62.9329" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Hands (4)" id="71" localization="8" tooltip="the robot stiffens the motors of one or both of his hands so that he can open or close&#x0A;it/them. Then he relaxes the motors of his hand(s)." x="184" y="1703">
                            <bitmap>media/images/box/movement/move_arm.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy( "ALMotion" )
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        try:
            hands = []
            if( self.getParameter("Side") in ["Left", "Both"] ):
                hands.append( "LHand" )
            if( self.getParameter("Side") in ["Right", "Both"] ):
                hands.append( "RHand" )
            ids = []
            for hand in hands:
                if( self.getParameter("Action") == "Open the hand" ):
                    ids.append( self.motion.post.openHand(hand) )
                else:
                    ids.append( self.motion.post.closeHand(hand) )
            for id in ids:
                self.motion.wait( id, 0 )
        finally:
            self.bIsRunning = False
            self.onDone() # activate output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                            <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the hand to move or both of them." id="4">
                                <Choice value="Both" />
                                <Choice value="Left" />
                                <Choice value="Right" />
                            </Parameter>
                            <Parameter name="Action" inherits_from_parent="0" content_type="3" value="Close the hand" default_value="Open the hand" custom_choice="0" tooltip="Action you want to make on the robot&apos;s hand." id="5">
                                <Choice value="Open the hand" />
                                <Choice value="Close the hand" />
                            </Parameter>
                        </Box>
                        <Box name="Look At (6)" id="72" localization="-1" tooltip="This box makes the robot look at a desired position." x="595" y="1377">
                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tracker = ALProxy( "ALTracker" )

        self.x = 0.0
        self.y = 0.0
        self.z = 0.0

        self.maxSpeed = 0.5

        self.useWholeBody = False
        self.frame = 0 #FRAME TORSO

    def onLoad(self):
        self.BIND_PYTHON(self.getName(), "setParameter")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.x = self.getParameter("X (m)")
        self.y = self.getParameter("Y (m)")
        self.z = self.getParameter("Z (m)")

        self.maxSpeed = self.getParameter("Speed (%)") / 100.0
        self.useWholeBody = self.getParameter("WholeBody")

        frameStr = self.getParameter("Frame")
        if frameStr == "Torso":
            self.frame = 0
        elif frameStr == "World":
            self.frame = 1
        elif frameStr == "Robot":
            self.frame = 2

        self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        pass

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)

        if (parameterName == "X (m)"):
            self.x = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Y (m)"):
            self.y = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Z (m)"):
            self.z = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Speed (%)"):
            self.maxSpeed = newValue / 100.0
            return

        if (parameterName == "WholeBody"):
            self.useWholeBody = newValue
            return

        if (parameterName == "Frame"):
            if(newValue == "Torso"):
                self.frame = 0
            elif newValue == "World":
                self.frame = 1
            elif newValue == "Robot":
                self.frame = 2]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="X (m)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.001" max="10" tooltip="X coordinate of the target to look at." id="5" />
                            <Parameter name="Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-10" max="10" tooltip="Y coordinate of the target to look at." id="6" />
                            <Parameter name="Z (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-10" max="10" tooltip="Z coordinate of the target to look at." id="7" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="50" default_value="50" min="1" max="100" tooltip="Speed to move the head towards the desired position." id="8" />
                            <Parameter name="WholeBody" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Use whole body constraints" id="9" />
                            <Parameter name="Frame" inherits_from_parent="0" content_type="3" value="Torso" default_value="Torso" custom_choice="0" tooltip="Select the frame of target." id="10">
                                <Choice value="Torso" />
                                <Choice value="World" />
                                <Choice value="Robot" />
                            </Parameter>
                        </Box>
                        <Box name="Wait (11)" id="65" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="374" y="1841">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="4" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="Look At (7)" id="73" localization="-1" tooltip="This box makes the robot look at a desired position." x="199" y="2468">
                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tracker = ALProxy( "ALTracker" )

        self.x = 0.0
        self.y = 0.0
        self.z = 0.0

        self.maxSpeed = 0.5

        self.useWholeBody = False
        self.frame = 0 #FRAME TORSO

    def onLoad(self):
        self.BIND_PYTHON(self.getName(), "setParameter")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.x = self.getParameter("X (m)")
        self.y = self.getParameter("Y (m)")
        self.z = self.getParameter("Z (m)")

        self.maxSpeed = self.getParameter("Speed (%)") / 100.0
        self.useWholeBody = self.getParameter("WholeBody")

        frameStr = self.getParameter("Frame")
        if frameStr == "Torso":
            self.frame = 0
        elif frameStr == "World":
            self.frame = 1
        elif frameStr == "Robot":
            self.frame = 2

        self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        pass

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)

        if (parameterName == "X (m)"):
            self.x = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Y (m)"):
            self.y = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Z (m)"):
            self.z = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Speed (%)"):
            self.maxSpeed = newValue / 100.0
            return

        if (parameterName == "WholeBody"):
            self.useWholeBody = newValue
            return

        if (parameterName == "Frame"):
            if(newValue == "Torso"):
                self.frame = 0
            elif newValue == "World":
                self.frame = 1
            elif newValue == "Robot":
                self.frame = 2]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="X (m)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.001" max="10" tooltip="X coordinate of the target to look at." id="5" />
                            <Parameter name="Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-10" max="10" tooltip="Y coordinate of the target to look at." id="6" />
                            <Parameter name="Z (m)" inherits_from_parent="0" content_type="2" value="5" default_value="0" min="-10" max="10" tooltip="Z coordinate of the target to look at." id="7" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="50" default_value="50" min="1" max="100" tooltip="Speed to move the head towards the desired position." id="8" />
                            <Parameter name="WholeBody" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Use whole body constraints" id="9" />
                            <Parameter name="Frame" inherits_from_parent="0" content_type="3" value="Torso" default_value="Torso" custom_choice="0" tooltip="Select the frame of target." id="10">
                                <Choice value="Torso" />
                                <Choice value="World" />
                                <Choice value="Robot" />
                            </Parameter>
                        </Box>
                        <Box name="Schouders_op (3)" id="74" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="485" y="2333">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="63">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="81.0338" />
                                        <Key frame="26" value="79.9791" />
                                        <Key frame="38" value="79.2759" />
                                        <Key frame="51" value="79.188" />
                                        <Key frame="63" value="82.5279" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="-1.76024" />
                                        <Key frame="26" value="8.61098" />
                                        <Key frame="38" value="49.217" />
                                        <Key frame="51" value="47.0197" />
                                        <Key frame="63" value="7.20472" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="85.6968" />
                                        <Key frame="26" value="85.8726" />
                                        <Key frame="38" value="75.062" />
                                        <Key frame="51" value="74.4467" />
                                        <Key frame="63" value="80.7749" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="4.48007" />
                                        <Key frame="26" value="-1.93602" />
                                        <Key frame="38" value="-48.6944" />
                                        <Key frame="51" value="-43.4209" />
                                        <Key frame="63" value="-0.969218" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Op_plaats (13)" id="75" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="194" y="2178">
                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                            <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                            <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                            <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                            <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                            <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                            <Resource name="Legs" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Duimen_omhoog (9)" id="76" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="333" y="2326">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="38">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="46.4923" />
                                        <Key frame="26" value="15.4665" />
                                        <Key frame="38" value="-36.9169" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-55.55" />
                                        <Key frame="26" value="-33.4013" />
                                        <Key frame="38" value="19.0701" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Strek_armen (6)" id="77" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="339" y="2174">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="63">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="79.2759" />
                                        <Key frame="26" value="77.1665" />
                                        <Key frame="38" value="32.6933" />
                                        <Key frame="51" value="-0.178186" />
                                        <Key frame="63" value="1.93121" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-25.9305" />
                                        <Key frame="26" value="-25.9305" />
                                        <Key frame="38" value="-25.9305" />
                                        <Key frame="51" value="-13.0983" />
                                        <Key frame="63" value="58.0061" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="77.2592" />
                                        <Key frame="26" value="72.9525" />
                                        <Key frame="38" value="33.0497" />
                                        <Key frame="51" value="-0.964409" />
                                        <Key frame="63" value="-0.43705" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="20.3885" />
                                        <Key frame="26" value="20.3885" />
                                        <Key frame="38" value="20.3006" />
                                        <Key frame="51" value="-6.85796" />
                                        <Key frame="63" value="-62.9329" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Hands (5)" id="78" localization="8" tooltip="the robot stiffens the motors of one or both of his hands so that he can open or close&#x0A;it/them. Then he relaxes the motors of his hand(s)." x="177" y="2328">
                            <bitmap>media/images/box/movement/move_arm.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy( "ALMotion" )
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        try:
            hands = []
            if( self.getParameter("Side") in ["Left", "Both"] ):
                hands.append( "LHand" )
            if( self.getParameter("Side") in ["Right", "Both"] ):
                hands.append( "RHand" )
            ids = []
            for hand in hands:
                if( self.getParameter("Action") == "Open the hand" ):
                    ids.append( self.motion.post.openHand(hand) )
                else:
                    ids.append( self.motion.post.closeHand(hand) )
            for id in ids:
                self.motion.wait( id, 0 )
        finally:
            self.bIsRunning = False
            self.onDone() # activate output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                            <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the hand to move or both of them." id="4">
                                <Choice value="Both" />
                                <Choice value="Left" />
                                <Choice value="Right" />
                            </Parameter>
                            <Parameter name="Action" inherits_from_parent="0" content_type="3" value="Close the hand" default_value="Open the hand" custom_choice="0" tooltip="Action you want to make on the robot&apos;s hand." id="5">
                                <Choice value="Open the hand" />
                                <Choice value="Close the hand" />
                            </Parameter>
                        </Box>
                        <Box name="Look At (8)" id="79" localization="-1" tooltip="This box makes the robot look at a desired position." x="372" y="1991">
                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tracker = ALProxy( "ALTracker" )

        self.x = 0.0
        self.y = 0.0
        self.z = 0.0

        self.maxSpeed = 0.5

        self.useWholeBody = False
        self.frame = 0 #FRAME TORSO

    def onLoad(self):
        self.BIND_PYTHON(self.getName(), "setParameter")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.x = self.getParameter("X (m)")
        self.y = self.getParameter("Y (m)")
        self.z = self.getParameter("Z (m)")

        self.maxSpeed = self.getParameter("Speed (%)") / 100.0
        self.useWholeBody = self.getParameter("WholeBody")

        frameStr = self.getParameter("Frame")
        if frameStr == "Torso":
            self.frame = 0
        elif frameStr == "World":
            self.frame = 1
        elif frameStr == "Robot":
            self.frame = 2

        self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        pass

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)

        if (parameterName == "X (m)"):
            self.x = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Y (m)"):
            self.y = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Z (m)"):
            self.z = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Speed (%)"):
            self.maxSpeed = newValue / 100.0
            return

        if (parameterName == "WholeBody"):
            self.useWholeBody = newValue
            return

        if (parameterName == "Frame"):
            if(newValue == "Torso"):
                self.frame = 0
            elif newValue == "World":
                self.frame = 1
            elif newValue == "Robot":
                self.frame = 2]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="X (m)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.001" max="10" tooltip="X coordinate of the target to look at." id="5" />
                            <Parameter name="Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-10" max="10" tooltip="Y coordinate of the target to look at." id="6" />
                            <Parameter name="Z (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-10" max="10" tooltip="Z coordinate of the target to look at." id="7" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="50" default_value="50" min="1" max="100" tooltip="Speed to move the head towards the desired position." id="8" />
                            <Parameter name="WholeBody" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Use whole body constraints" id="9" />
                            <Parameter name="Frame" inherits_from_parent="0" content_type="3" value="Torso" default_value="Torso" custom_choice="0" tooltip="Select the frame of target." id="10">
                                <Choice value="Torso" />
                                <Choice value="World" />
                                <Choice value="Robot" />
                            </Parameter>
                        </Box>
                        <Box name="wawa (3)" id="80" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="205" y="1996">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="176">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="13" value="-38.4063" />
                                        <Key frame="26" value="-42.0098" />
                                        <Key frame="38" value="-39.6368" />
                                        <Key frame="51" value="-43.9435" />
                                        <Key frame="63" value="-41.1309" />
                                        <Key frame="76" value="-45.4376" />
                                        <Key frame="88" value="-41.8341" />
                                        <Key frame="101" value="-46.0529" />
                                        <Key frame="113" value="-43.0645" />
                                        <Key frame="126" value="-47.0197" />
                                        <Key frame="138" value="-44.0313" />
                                        <Key frame="151" value="-48.6017" />
                                        <Key frame="163" value="-46.3165" />
                                        <Key frame="176" value="-50.008" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="13" value="-91.4977" />
                                        <Key frame="26" value="-91.5856" />
                                        <Key frame="38" value="-91.4977" />
                                        <Key frame="51" value="-91.5856" />
                                        <Key frame="63" value="-91.4098" />
                                        <Key frame="76" value="-91.5856" />
                                        <Key frame="88" value="-91.1461" />
                                        <Key frame="101" value="-91.4977" />
                                        <Key frame="113" value="-91.3219" />
                                        <Key frame="126" value="-91.4977" />
                                        <Key frame="138" value="-91.234" />
                                        <Key frame="151" value="-91.4977" />
                                        <Key frame="163" value="-91.3219" />
                                        <Key frame="176" value="-91.4977" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="57.3909" />
                                        <Key frame="26" value="6.76526" />
                                        <Key frame="38" value="58.4456" />
                                        <Key frame="51" value="13.0935" />
                                        <Key frame="63" value="60.3792" />
                                        <Key frame="76" value="10.193" />
                                        <Key frame="88" value="59.764" />
                                        <Key frame="101" value="7.3805" />
                                        <Key frame="113" value="53.7873" />
                                        <Key frame="126" value="7.55628" />
                                        <Key frame="138" value="59.764" />
                                        <Key frame="151" value="11.863" />
                                        <Key frame="163" value="61.346" />
                                        <Key frame="176" value="9.75358" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="-13.8014" />
                                        <Key frame="26" value="-16.5261" />
                                        <Key frame="38" value="-16.2624" />
                                        <Key frame="51" value="-14.5924" />
                                        <Key frame="63" value="-14.4166" />
                                        <Key frame="76" value="-14.0651" />
                                        <Key frame="88" value="-15.0319" />
                                        <Key frame="101" value="-16.9655" />
                                        <Key frame="113" value="-15.9987" />
                                        <Key frame="126" value="-15.9108" />
                                        <Key frame="138" value="-14.5045" />
                                        <Key frame="151" value="-12.1315" />
                                        <Key frame="163" value="-14.2409" />
                                        <Key frame="176" value="-14.6803" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="13" value="36.5654" />
                                        <Key frame="26" value="35.3349" />
                                        <Key frame="38" value="37.0927" />
                                        <Key frame="51" value="34.8954" />
                                        <Key frame="63" value="38.1474" />
                                        <Key frame="76" value="34.1044" />
                                        <Key frame="88" value="37.708" />
                                        <Key frame="101" value="33.7528" />
                                        <Key frame="113" value="37.5322" />
                                        <Key frame="126" value="34.0165" />
                                        <Key frame="138" value="37.3564" />
                                        <Key frame="151" value="36.3017" />
                                        <Key frame="163" value="38.499" />
                                        <Key frame="176" value="34.5439" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="13" value="93.0749" />
                                        <Key frame="26" value="92.8113" />
                                        <Key frame="38" value="93.1628" />
                                        <Key frame="51" value="93.1628" />
                                        <Key frame="63" value="93.2507" />
                                        <Key frame="76" value="93.2507" />
                                        <Key frame="88" value="93.6023" />
                                        <Key frame="101" value="93.6902" />
                                        <Key frame="113" value="93.4265" />
                                        <Key frame="126" value="93.4265" />
                                        <Key frame="138" value="93.6902" />
                                        <Key frame="151" value="93.1628" />
                                        <Key frame="163" value="93.7781" />
                                        <Key frame="176" value="93.6902" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="18.6354" />
                                        <Key frame="26" value="67.8548" />
                                        <Key frame="38" value="11.1647" />
                                        <Key frame="51" value="60.384" />
                                        <Key frame="63" value="14.944" />
                                        <Key frame="76" value="60.4719" />
                                        <Key frame="88" value="-0.173378" />
                                        <Key frame="101" value="55.4621" />
                                        <Key frame="113" value="6.41851" />
                                        <Key frame="126" value="59.8567" />
                                        <Key frame="138" value="11.0768" />
                                        <Key frame="151" value="64.2513" />
                                        <Key frame="163" value="3.34228" />
                                        <Key frame="176" value="58.011" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="10.5446" />
                                        <Key frame="26" value="11.4235" />
                                        <Key frame="38" value="13.0935" />
                                        <Key frame="51" value="12.9177" />
                                        <Key frame="63" value="11.2477" />
                                        <Key frame="76" value="14.2361" />
                                        <Key frame="88" value="11.2477" />
                                        <Key frame="101" value="16.7849" />
                                        <Key frame="113" value="14.9392" />
                                        <Key frame="126" value="16.4334" />
                                        <Key frame="138" value="15.8181" />
                                        <Key frame="151" value="14.6755" />
                                        <Key frame="163" value="12.0388" />
                                        <Key frame="176" value="18" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Wait (12)" id="81" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="350" y="2468">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="4" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="Op_plaats (14)" id="82" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="498" y="2465">
                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                            <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                            <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                            <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                            <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                            <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                            <Resource name="Legs" type="Lock" timeout="0" />
                        </Box>
                        <Box name="wawa (4)" id="83" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="662" y="2459">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="176">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="13" value="-38.4063" />
                                        <Key frame="26" value="-42.0098" />
                                        <Key frame="38" value="-39.6368" />
                                        <Key frame="51" value="-43.9435" />
                                        <Key frame="63" value="-41.1309" />
                                        <Key frame="76" value="-45.4376" />
                                        <Key frame="88" value="-41.8341" />
                                        <Key frame="101" value="-46.0529" />
                                        <Key frame="113" value="-43.0645" />
                                        <Key frame="126" value="-47.0197" />
                                        <Key frame="138" value="-44.0313" />
                                        <Key frame="151" value="-48.6017" />
                                        <Key frame="163" value="-46.3165" />
                                        <Key frame="176" value="-50.008" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="13" value="-91.4977" />
                                        <Key frame="26" value="-91.5856" />
                                        <Key frame="38" value="-91.4977" />
                                        <Key frame="51" value="-91.5856" />
                                        <Key frame="63" value="-91.4098" />
                                        <Key frame="76" value="-91.5856" />
                                        <Key frame="88" value="-91.1461" />
                                        <Key frame="101" value="-91.4977" />
                                        <Key frame="113" value="-91.3219" />
                                        <Key frame="126" value="-91.4977" />
                                        <Key frame="138" value="-91.234" />
                                        <Key frame="151" value="-91.4977" />
                                        <Key frame="163" value="-91.3219" />
                                        <Key frame="176" value="-91.4977" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="57.3909" />
                                        <Key frame="26" value="6.76526" />
                                        <Key frame="38" value="58.4456" />
                                        <Key frame="51" value="13.0935" />
                                        <Key frame="63" value="60.3792" />
                                        <Key frame="76" value="10.193" />
                                        <Key frame="88" value="59.764" />
                                        <Key frame="101" value="7.3805" />
                                        <Key frame="113" value="53.7873" />
                                        <Key frame="126" value="7.55628" />
                                        <Key frame="138" value="59.764" />
                                        <Key frame="151" value="11.863" />
                                        <Key frame="163" value="61.346" />
                                        <Key frame="176" value="9.75358" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="-13.8014" />
                                        <Key frame="26" value="-16.5261" />
                                        <Key frame="38" value="-16.2624" />
                                        <Key frame="51" value="-14.5924" />
                                        <Key frame="63" value="-14.4166" />
                                        <Key frame="76" value="-14.0651" />
                                        <Key frame="88" value="-15.0319" />
                                        <Key frame="101" value="-16.9655" />
                                        <Key frame="113" value="-15.9987" />
                                        <Key frame="126" value="-15.9108" />
                                        <Key frame="138" value="-14.5045" />
                                        <Key frame="151" value="-12.1315" />
                                        <Key frame="163" value="-14.2409" />
                                        <Key frame="176" value="-14.6803" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="13" value="36.5654" />
                                        <Key frame="26" value="35.3349" />
                                        <Key frame="38" value="37.0927" />
                                        <Key frame="51" value="34.8954" />
                                        <Key frame="63" value="38.1474" />
                                        <Key frame="76" value="34.1044" />
                                        <Key frame="88" value="37.708" />
                                        <Key frame="101" value="33.7528" />
                                        <Key frame="113" value="37.5322" />
                                        <Key frame="126" value="34.0165" />
                                        <Key frame="138" value="37.3564" />
                                        <Key frame="151" value="36.3017" />
                                        <Key frame="163" value="38.499" />
                                        <Key frame="176" value="34.5439" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="13" value="93.0749" />
                                        <Key frame="26" value="92.8113" />
                                        <Key frame="38" value="93.1628" />
                                        <Key frame="51" value="93.1628" />
                                        <Key frame="63" value="93.2507" />
                                        <Key frame="76" value="93.2507" />
                                        <Key frame="88" value="93.6023" />
                                        <Key frame="101" value="93.6902" />
                                        <Key frame="113" value="93.4265" />
                                        <Key frame="126" value="93.4265" />
                                        <Key frame="138" value="93.6902" />
                                        <Key frame="151" value="93.1628" />
                                        <Key frame="163" value="93.7781" />
                                        <Key frame="176" value="93.6902" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="18.6354" />
                                        <Key frame="26" value="67.8548" />
                                        <Key frame="38" value="11.1647" />
                                        <Key frame="51" value="60.384" />
                                        <Key frame="63" value="14.944" />
                                        <Key frame="76" value="60.4719" />
                                        <Key frame="88" value="-0.173378" />
                                        <Key frame="101" value="55.4621" />
                                        <Key frame="113" value="6.41851" />
                                        <Key frame="126" value="59.8567" />
                                        <Key frame="138" value="11.0768" />
                                        <Key frame="151" value="64.2513" />
                                        <Key frame="163" value="3.34228" />
                                        <Key frame="176" value="58.011" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="10.5446" />
                                        <Key frame="26" value="11.4235" />
                                        <Key frame="38" value="13.0935" />
                                        <Key frame="51" value="12.9177" />
                                        <Key frame="63" value="11.2477" />
                                        <Key frame="76" value="14.2361" />
                                        <Key frame="88" value="11.2477" />
                                        <Key frame="101" value="16.7849" />
                                        <Key frame="113" value="14.9392" />
                                        <Key frame="126" value="16.4334" />
                                        <Key frame="138" value="15.8181" />
                                        <Key frame="151" value="14.6755" />
                                        <Key frame="163" value="12.0388" />
                                        <Key frame="176" value="18" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Look At (9)" id="84" localization="-1" tooltip="This box makes the robot look at a desired position." x="219" y="2896">
                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tracker = ALProxy( "ALTracker" )

        self.x = 0.0
        self.y = 0.0
        self.z = 0.0

        self.maxSpeed = 0.5

        self.useWholeBody = False
        self.frame = 0 #FRAME TORSO

    def onLoad(self):
        self.BIND_PYTHON(self.getName(), "setParameter")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.x = self.getParameter("X (m)")
        self.y = self.getParameter("Y (m)")
        self.z = self.getParameter("Z (m)")

        self.maxSpeed = self.getParameter("Speed (%)") / 100.0
        self.useWholeBody = self.getParameter("WholeBody")

        frameStr = self.getParameter("Frame")
        if frameStr == "Torso":
            self.frame = 0
        elif frameStr == "World":
            self.frame = 1
        elif frameStr == "Robot":
            self.frame = 2

        self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        pass

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)

        if (parameterName == "X (m)"):
            self.x = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Y (m)"):
            self.y = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Z (m)"):
            self.z = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Speed (%)"):
            self.maxSpeed = newValue / 100.0
            return

        if (parameterName == "WholeBody"):
            self.useWholeBody = newValue
            return

        if (parameterName == "Frame"):
            if(newValue == "Torso"):
                self.frame = 0
            elif newValue == "World":
                self.frame = 1
            elif newValue == "Robot":
                self.frame = 2]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="X (m)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.001" max="10" tooltip="X coordinate of the target to look at." id="5" />
                            <Parameter name="Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-10" max="10" tooltip="Y coordinate of the target to look at." id="6" />
                            <Parameter name="Z (m)" inherits_from_parent="0" content_type="2" value="5" default_value="0" min="-10" max="10" tooltip="Z coordinate of the target to look at." id="7" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="50" default_value="50" min="1" max="100" tooltip="Speed to move the head towards the desired position." id="8" />
                            <Parameter name="WholeBody" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Use whole body constraints" id="9" />
                            <Parameter name="Frame" inherits_from_parent="0" content_type="3" value="Torso" default_value="Torso" custom_choice="0" tooltip="Select the frame of target." id="10">
                                <Choice value="Torso" />
                                <Choice value="World" />
                                <Choice value="Robot" />
                            </Parameter>
                        </Box>
                        <Box name="Schouders_op (4)" id="85" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="505" y="2761">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="63">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="81.0338" />
                                        <Key frame="26" value="79.9791" />
                                        <Key frame="38" value="79.2759" />
                                        <Key frame="51" value="79.188" />
                                        <Key frame="63" value="82.5279" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="-1.76024" />
                                        <Key frame="26" value="8.61098" />
                                        <Key frame="38" value="49.217" />
                                        <Key frame="51" value="47.0197" />
                                        <Key frame="63" value="7.20472" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="85.6968" />
                                        <Key frame="26" value="85.8726" />
                                        <Key frame="38" value="75.062" />
                                        <Key frame="51" value="74.4467" />
                                        <Key frame="63" value="80.7749" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="4.48007" />
                                        <Key frame="26" value="-1.93602" />
                                        <Key frame="38" value="-48.6944" />
                                        <Key frame="51" value="-43.4209" />
                                        <Key frame="63" value="-0.969218" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Op_plaats (15)" id="86" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="390" y="2603">
                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                            <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                            <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                            <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                            <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                            <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                            <Resource name="Legs" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Duimen_omhoog (10)" id="87" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="353" y="2754">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="38">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="46.4923" />
                                        <Key frame="26" value="15.4665" />
                                        <Key frame="38" value="-36.9169" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-55.55" />
                                        <Key frame="26" value="-33.4013" />
                                        <Key frame="38" value="19.0701" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Strek_armen (7)" id="88" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="535" y="2599">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="63">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="79.2759" />
                                        <Key frame="26" value="77.1665" />
                                        <Key frame="38" value="32.6933" />
                                        <Key frame="51" value="-0.178186" />
                                        <Key frame="63" value="1.93121" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="-25.9305" />
                                        <Key frame="26" value="-25.9305" />
                                        <Key frame="38" value="-25.9305" />
                                        <Key frame="51" value="-13.0983" />
                                        <Key frame="63" value="58.0061" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="77.2592" />
                                        <Key frame="26" value="72.9525" />
                                        <Key frame="38" value="33.0497" />
                                        <Key frame="51" value="-0.964409" />
                                        <Key frame="63" value="-0.43705" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="20.3885" />
                                        <Key frame="26" value="20.3885" />
                                        <Key frame="38" value="20.3006" />
                                        <Key frame="51" value="-6.85796" />
                                        <Key frame="63" value="-62.9329" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Hands (6)" id="89" localization="8" tooltip="the robot stiffens the motors of one or both of his hands so that he can open or close&#x0A;it/them. Then he relaxes the motors of his hand(s)." x="197" y="2756">
                            <bitmap>media/images/box/movement/move_arm.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = ALProxy( "ALMotion" )
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        try:
            hands = []
            if( self.getParameter("Side") in ["Left", "Both"] ):
                hands.append( "LHand" )
            if( self.getParameter("Side") in ["Right", "Both"] ):
                hands.append( "RHand" )
            ids = []
            for hand in hands:
                if( self.getParameter("Action") == "Open the hand" ):
                    ids.append( self.motion.post.openHand(hand) )
                else:
                    ids.append( self.motion.post.closeHand(hand) )
            for id in ids:
                self.motion.wait( id, 0 )
        finally:
            self.bIsRunning = False
            self.onDone() # activate output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                            <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the hand to move or both of them." id="4">
                                <Choice value="Both" />
                                <Choice value="Left" />
                                <Choice value="Right" />
                            </Parameter>
                            <Parameter name="Action" inherits_from_parent="0" content_type="3" value="Close the hand" default_value="Open the hand" custom_choice="0" tooltip="Action you want to make on the robot&apos;s hand." id="5">
                                <Choice value="Open the hand" />
                                <Choice value="Close the hand" />
                            </Parameter>
                        </Box>
                        <Box name="Look At (10)" id="90" localization="-1" tooltip="This box makes the robot look at a desired position." x="224" y="2604">
                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tracker = ALProxy( "ALTracker" )

        self.x = 0.0
        self.y = 0.0
        self.z = 0.0

        self.maxSpeed = 0.5

        self.useWholeBody = False
        self.frame = 0 #FRAME TORSO

    def onLoad(self):
        self.BIND_PYTHON(self.getName(), "setParameter")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.x = self.getParameter("X (m)")
        self.y = self.getParameter("Y (m)")
        self.z = self.getParameter("Z (m)")

        self.maxSpeed = self.getParameter("Speed (%)") / 100.0
        self.useWholeBody = self.getParameter("WholeBody")

        frameStr = self.getParameter("Frame")
        if frameStr == "Torso":
            self.frame = 0
        elif frameStr == "World":
            self.frame = 1
        elif frameStr == "Robot":
            self.frame = 2

        self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        pass

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)

        if (parameterName == "X (m)"):
            self.x = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Y (m)"):
            self.y = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Z (m)"):
            self.z = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Speed (%)"):
            self.maxSpeed = newValue / 100.0
            return

        if (parameterName == "WholeBody"):
            self.useWholeBody = newValue
            return

        if (parameterName == "Frame"):
            if(newValue == "Torso"):
                self.frame = 0
            elif newValue == "World":
                self.frame = 1
            elif newValue == "Robot":
                self.frame = 2]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="X (m)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.001" max="10" tooltip="X coordinate of the target to look at." id="5" />
                            <Parameter name="Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-10" max="10" tooltip="Y coordinate of the target to look at." id="6" />
                            <Parameter name="Z (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-10" max="10" tooltip="Z coordinate of the target to look at." id="7" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="50" default_value="50" min="1" max="100" tooltip="Speed to move the head towards the desired position." id="8" />
                            <Parameter name="WholeBody" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Use whole body constraints" id="9" />
                            <Parameter name="Frame" inherits_from_parent="0" content_type="3" value="Torso" default_value="Torso" custom_choice="0" tooltip="Select the frame of target." id="10">
                                <Choice value="Torso" />
                                <Choice value="World" />
                                <Choice value="Robot" />
                            </Parameter>
                        </Box>
                        <Box name="Wait (13)" id="91" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="370" y="2896">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="Op_plaats (16)" id="92" localization="8" tooltip="Make the robot move to a configured point relative to its current location." x="518" y="2893">
                            <bitmap>media/images/box/movement/walk_forward.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.motion = ALProxy("ALMotion")
        self.positionErrorThresholdPos = 0.01
        self.positionErrorThresholdAng = 0.03

    def onLoad(self):
        pass

    def onUnload(self):
        self.motion.moveToward(0.0, 0.0, 0.0)

    def onInput_onStart(self):
        import almath
        # The command position estimation will be set to the sensor position
        # when the robot starts moving, so we use sensors first and commands later.
        initPosition = almath.Pose2D(self.motion.getRobotPosition(True))
        targetDistance = almath.Pose2D(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)
        expectedEndPosition = initPosition * targetDistance
        enableArms = self.getParameter("Arms movement enabled")
        self.motion.setMoveArmsEnabled(enableArms, enableArms)
        self.motion.moveTo(self.getParameter("Distance X (m)"),
            self.getParameter("Distance Y (m)"),
            self.getParameter("Theta (deg)") * almath.PI / 180)

        # The move is finished so output
        realEndPosition = almath.Pose2D(self.motion.getRobotPosition(False))
        positionError = realEndPosition.diff(expectedEndPosition)
        positionError.theta = almath.modulo2PI(positionError.theta)
        if (abs(positionError.x) < self.positionErrorThresholdPos
            and abs(positionError.y) < self.positionErrorThresholdPos
            and abs(positionError.theta) < self.positionErrorThresholdAng):
            self.onArrivedAtDestination()
        else:
            self.onStoppedBeforeArriving(positionError.toVector())

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onArrivedAtDestination" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot arrives at its destination." id="4" />
                            <Output name="onStoppedBeforeArriving" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot stops before arriving to its destination. Returns a vector [x (m), y (m), theta(rad)] with the remaining distance up to the destination. This distance is expressed in the ROBOT frame." id="5" />
                            <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.2" min="-5" max="10" tooltip="The distance in meters for forward/backward motion. Positive value&#x0A;means forward, negative value means backward." id="6" />
                            <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="The distance in meters for lateral motion. Positive value means left, negative&#x0A;value means right." id="7" />
                            <Parameter name="Theta (deg)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-180" max="180" tooltip="The orientation in degrees for final rotation. Positive value means anticlockwise,&#x0A;negative value means clockwise." id="8" />
                            <Parameter name="Arms movement enabled" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Enables natural motion of the arms." id="9" />
                            <Resource name="Legs" type="Lock" timeout="0" />
                        </Box>
                        <Box name="wawa (5)" id="93" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="196" y="3042">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="176">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="13" value="-38.4063" />
                                        <Key frame="26" value="-42.0098" />
                                        <Key frame="38" value="-39.6368" />
                                        <Key frame="51" value="-43.9435" />
                                        <Key frame="63" value="-41.1309" />
                                        <Key frame="76" value="-45.4376" />
                                        <Key frame="88" value="-41.8341" />
                                        <Key frame="101" value="-46.0529" />
                                        <Key frame="113" value="-43.0645" />
                                        <Key frame="126" value="-47.0197" />
                                        <Key frame="138" value="-44.0313" />
                                        <Key frame="151" value="-48.6017" />
                                        <Key frame="163" value="-46.3165" />
                                        <Key frame="176" value="-50.008" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="13" value="-91.4977" />
                                        <Key frame="26" value="-91.5856" />
                                        <Key frame="38" value="-91.4977" />
                                        <Key frame="51" value="-91.5856" />
                                        <Key frame="63" value="-91.4098" />
                                        <Key frame="76" value="-91.5856" />
                                        <Key frame="88" value="-91.1461" />
                                        <Key frame="101" value="-91.4977" />
                                        <Key frame="113" value="-91.3219" />
                                        <Key frame="126" value="-91.4977" />
                                        <Key frame="138" value="-91.234" />
                                        <Key frame="151" value="-91.4977" />
                                        <Key frame="163" value="-91.3219" />
                                        <Key frame="176" value="-91.4977" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="57.3909" />
                                        <Key frame="26" value="6.76526" />
                                        <Key frame="38" value="58.4456" />
                                        <Key frame="51" value="13.0935" />
                                        <Key frame="63" value="60.3792" />
                                        <Key frame="76" value="10.193" />
                                        <Key frame="88" value="59.764" />
                                        <Key frame="101" value="7.3805" />
                                        <Key frame="113" value="53.7873" />
                                        <Key frame="126" value="7.55628" />
                                        <Key frame="138" value="59.764" />
                                        <Key frame="151" value="11.863" />
                                        <Key frame="163" value="61.346" />
                                        <Key frame="176" value="9.75358" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="-13.8014" />
                                        <Key frame="26" value="-16.5261" />
                                        <Key frame="38" value="-16.2624" />
                                        <Key frame="51" value="-14.5924" />
                                        <Key frame="63" value="-14.4166" />
                                        <Key frame="76" value="-14.0651" />
                                        <Key frame="88" value="-15.0319" />
                                        <Key frame="101" value="-16.9655" />
                                        <Key frame="113" value="-15.9987" />
                                        <Key frame="126" value="-15.9108" />
                                        <Key frame="138" value="-14.5045" />
                                        <Key frame="151" value="-12.1315" />
                                        <Key frame="163" value="-14.2409" />
                                        <Key frame="176" value="-14.6803" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="13" value="36.5654" />
                                        <Key frame="26" value="35.3349" />
                                        <Key frame="38" value="37.0927" />
                                        <Key frame="51" value="34.8954" />
                                        <Key frame="63" value="38.1474" />
                                        <Key frame="76" value="34.1044" />
                                        <Key frame="88" value="37.708" />
                                        <Key frame="101" value="33.7528" />
                                        <Key frame="113" value="37.5322" />
                                        <Key frame="126" value="34.0165" />
                                        <Key frame="138" value="37.3564" />
                                        <Key frame="151" value="36.3017" />
                                        <Key frame="163" value="38.499" />
                                        <Key frame="176" value="34.5439" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="13" value="93.0749" />
                                        <Key frame="26" value="92.8113" />
                                        <Key frame="38" value="93.1628" />
                                        <Key frame="51" value="93.1628" />
                                        <Key frame="63" value="93.2507" />
                                        <Key frame="76" value="93.2507" />
                                        <Key frame="88" value="93.6023" />
                                        <Key frame="101" value="93.6902" />
                                        <Key frame="113" value="93.4265" />
                                        <Key frame="126" value="93.4265" />
                                        <Key frame="138" value="93.6902" />
                                        <Key frame="151" value="93.1628" />
                                        <Key frame="163" value="93.7781" />
                                        <Key frame="176" value="93.6902" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="18.6354" />
                                        <Key frame="26" value="67.8548" />
                                        <Key frame="38" value="11.1647" />
                                        <Key frame="51" value="60.384" />
                                        <Key frame="63" value="14.944" />
                                        <Key frame="76" value="60.4719" />
                                        <Key frame="88" value="-0.173378" />
                                        <Key frame="101" value="55.4621" />
                                        <Key frame="113" value="6.41851" />
                                        <Key frame="126" value="59.8567" />
                                        <Key frame="138" value="11.0768" />
                                        <Key frame="151" value="64.2513" />
                                        <Key frame="163" value="3.34228" />
                                        <Key frame="176" value="58.011" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="10.5446" />
                                        <Key frame="26" value="11.4235" />
                                        <Key frame="38" value="13.0935" />
                                        <Key frame="51" value="12.9177" />
                                        <Key frame="63" value="11.2477" />
                                        <Key frame="76" value="14.2361" />
                                        <Key frame="88" value="11.2477" />
                                        <Key frame="101" value="16.7849" />
                                        <Key frame="113" value="14.9392" />
                                        <Key frame="126" value="16.4334" />
                                        <Key frame="138" value="15.8181" />
                                        <Key frame="151" value="14.6755" />
                                        <Key frame="163" value="12.0388" />
                                        <Key frame="176" value="18" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Wait (14)" id="94" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="690" y="2886">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Box name="wawa2 (2)" id="95" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="368" y="3039">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="201">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="3.77694" />
                                        <Key frame="26" value="3.51326" />
                                        <Key frame="38" value="5.71056" />
                                        <Key frame="51" value="-0.969218" />
                                        <Key frame="63" value="-0.353968" />
                                        <Key frame="76" value="4.65585" />
                                        <Key frame="88" value="0.788627" />
                                        <Key frame="101" value="2.81013" />
                                        <Key frame="113" value="3.42537" />
                                        <Key frame="126" value="-1.67234" />
                                        <Key frame="138" value="-1.93602" />
                                        <Key frame="151" value="1.40386" />
                                        <Key frame="163" value="0.349159" />
                                        <Key frame="176" value="1.14019" />
                                        <Key frame="188" value="1.14019" />
                                        <Key frame="201" value="-0.529749" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="-2.99072" />
                                        <Key frame="26" value="-13.0983" />
                                        <Key frame="38" value="-18" />
                                        <Key frame="51" value="30.7597" />
                                        <Key frame="63" value="3.86484" />
                                        <Key frame="76" value="-18" />
                                        <Key frame="88" value="33.9238" />
                                        <Key frame="101" value="-8.79157" />
                                        <Key frame="113" value="0.0854867" />
                                        <Key frame="126" value="39.1094" />
                                        <Key frame="138" value="2.63435" />
                                        <Key frame="151" value="-18" />
                                        <Key frame="163" value="14.1482" />
                                        <Key frame="176" value="33.9238" />
                                        <Key frame="188" value="-18" />
                                        <Key frame="201" value="31.9902" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="2.37549" />
                                        <Key frame="26" value="2.46338" />
                                        <Key frame="38" value="1.93602" />
                                        <Key frame="51" value="2.28759" />
                                        <Key frame="63" value="1.76024" />
                                        <Key frame="76" value="-2.1949" />
                                        <Key frame="88" value="-1.57965" />
                                        <Key frame="101" value="-1.31597" />
                                        <Key frame="113" value="-1.57965" />
                                        <Key frame="126" value="-1.57965" />
                                        <Key frame="138" value="-2.0191" />
                                        <Key frame="151" value="-2.0191" />
                                        <Key frame="163" value="-2.1949" />
                                        <Key frame="176" value="-1.14019" />
                                        <Key frame="188" value="-1.75543" />
                                        <Key frame="201" value="-1.75543" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="4.65585" />
                                        <Key frame="26" value="-6.94585" />
                                        <Key frame="38" value="-31.6434" />
                                        <Key frame="51" value="18" />
                                        <Key frame="63" value="-0.353968" />
                                        <Key frame="76" value="-27.4246" />
                                        <Key frame="88" value="15.3786" />
                                        <Key frame="101" value="-15.5592" />
                                        <Key frame="113" value="-6.59429" />
                                        <Key frame="126" value="18" />
                                        <Key frame="138" value="-6.77007" />
                                        <Key frame="151" value="-19.0749" />
                                        <Key frame="163" value="0.173378" />
                                        <Key frame="176" value="18" />
                                        <Key frame="188" value="-21.2722" />
                                        <Key frame="201" value="18" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Timeline" id="96" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="686" y="3040">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="38">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="-1.05711" />
                                        <Key frame="26" value="-36.829" />
                                        <Key frame="38" value="-37.3564" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="-0.173378" />
                                        <Key frame="26" value="-37.3516" />
                                        <Key frame="38" value="-38.4942" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Look At (11)" id="97" localization="-1" tooltip="This box makes the robot look at a desired position." x="520" y="3040">
                            <bitmap>media/images/box/movement/move_head.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tracker = ALProxy( "ALTracker" )

        self.x = 0.0
        self.y = 0.0
        self.z = 0.0

        self.maxSpeed = 0.5

        self.useWholeBody = False
        self.frame = 0 #FRAME TORSO

    def onLoad(self):
        self.BIND_PYTHON(self.getName(), "setParameter")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.x = self.getParameter("X (m)")
        self.y = self.getParameter("Y (m)")
        self.z = self.getParameter("Z (m)")

        self.maxSpeed = self.getParameter("Speed (%)") / 100.0
        self.useWholeBody = self.getParameter("WholeBody")

        frameStr = self.getParameter("Frame")
        if frameStr == "Torso":
            self.frame = 0
        elif frameStr == "World":
            self.frame = 1
        elif frameStr == "Robot":
            self.frame = 2

        self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        pass

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)

        if (parameterName == "X (m)"):
            self.x = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Y (m)"):
            self.y = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Z (m)"):
            self.z = newValue
            self.tracker.lookAt([self.x, self.y, self.z], self.frame, self.maxSpeed, self.useWholeBody)
            self.onStopped()
            return

        if (parameterName == "Speed (%)"):
            self.maxSpeed = newValue / 100.0
            return

        if (parameterName == "WholeBody"):
            self.useWholeBody = newValue
            return

        if (parameterName == "Frame"):
            if(newValue == "Torso"):
                self.frame = 0
            elif newValue == "World":
                self.frame = 1
            elif newValue == "Robot":
                self.frame = 2]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Parameter name="X (m)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.001" max="10" tooltip="X coordinate of the target to look at." id="5" />
                            <Parameter name="Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-10" max="10" tooltip="Y coordinate of the target to look at." id="6" />
                            <Parameter name="Z (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-10" max="10" tooltip="Z coordinate of the target to look at." id="7" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="50" default_value="50" min="1" max="100" tooltip="Speed to move the head towards the desired position." id="8" />
                            <Parameter name="WholeBody" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Use whole body constraints" id="9" />
                            <Parameter name="Frame" inherits_from_parent="0" content_type="3" value="Torso" default_value="Torso" custom_choice="0" tooltip="Select the frame of target." id="10">
                                <Choice value="Torso" />
                                <Choice value="World" />
                                <Choice value="Robot" />
                            </Parameter>
                        </Box>
                        <Box name="Wait (15)" id="98" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="305" y="1385">
                            <bitmap>media/images/box/wait.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                        </Box>
                        <Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="14" indexofinput="2" outputowner="13" indexofoutput="4" />
                        <Link inputowner="17" indexofinput="2" outputowner="16" indexofoutput="4" />
                        <Link inputowner="18" indexofinput="2" outputowner="17" indexofoutput="4" />
                        <Link inputowner="19" indexofinput="2" outputowner="14" indexofoutput="4" />
                        <Link inputowner="16" indexofinput="2" outputowner="19" indexofoutput="4" />
                        <Link inputowner="20" indexofinput="2" outputowner="18" indexofoutput="4" />
                        <Link inputowner="22" indexofinput="2" outputowner="21" indexofoutput="4" />
                        <Link inputowner="23" indexofinput="2" outputowner="22" indexofoutput="4" />
                        <Link inputowner="24" indexofinput="2" outputowner="23" indexofoutput="4" />
                        <Link inputowner="21" indexofinput="2" outputowner="20" indexofoutput="4" />
                        <Link inputowner="26" indexofinput="2" outputowner="25" indexofoutput="4" />
                        <Link inputowner="27" indexofinput="2" outputowner="26" indexofoutput="4" />
                        <Link inputowner="25" indexofinput="2" outputowner="24" indexofoutput="4" />
                        <Link inputowner="9" indexofinput="2" outputowner="28" indexofoutput="4" />
                        <Link inputowner="28" indexofinput="2" outputowner="27" indexofoutput="4" />
                        <Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" />
                        <Link inputowner="7" indexofinput="2" outputowner="4" indexofoutput="4" />
                        <Link inputowner="29" indexofinput="2" outputowner="7" indexofoutput="4" />
                        <Link inputowner="2" indexofinput="2" outputowner="30" indexofoutput="4" />
                        <Link inputowner="30" indexofinput="2" outputowner="29" indexofoutput="4" />
                        <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="4" />
                        <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="4" />
                        <Link inputowner="31" indexofinput="2" outputowner="10" indexofoutput="4" />
                        <Link inputowner="32" indexofinput="2" outputowner="31" indexofoutput="4" />
                        <Link inputowner="8" indexofinput="2" outputowner="33" indexofoutput="4" />
                        <Link inputowner="33" indexofinput="2" outputowner="32" indexofoutput="4" />
                        <Link inputowner="10" indexofinput="2" outputowner="6" indexofoutput="4" />
                        <Link inputowner="34" indexofinput="2" outputowner="8" indexofoutput="4" />
                        <Link inputowner="37" indexofinput="2" outputowner="36" indexofoutput="4" />
                        <Link inputowner="38" indexofinput="2" outputowner="37" indexofoutput="4" />
                        <Link inputowner="35" indexofinput="2" outputowner="39" indexofoutput="4" />
                        <Link inputowner="39" indexofinput="2" outputowner="38" indexofoutput="4" />
                        <Link inputowner="36" indexofinput="2" outputowner="34" indexofoutput="4" />
                        <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="12" indexofinput="2" outputowner="3" indexofoutput="4" />
                        <Link inputowner="5" indexofinput="2" outputowner="12" indexofoutput="4" />
                        <Link inputowner="15" indexofinput="2" outputowner="5" indexofoutput="4" />
                        <Link inputowner="40" indexofinput="2" outputowner="15" indexofoutput="4" />
                        <Link inputowner="42" indexofinput="2" outputowner="40" indexofoutput="4" />
                        <Link inputowner="43" indexofinput="2" outputowner="42" indexofoutput="4" />
                        <Link inputowner="44" indexofinput="2" outputowner="46" indexofoutput="4" />
                        <Link inputowner="46" indexofinput="2" outputowner="43" indexofoutput="4" />
                        <Link inputowner="47" indexofinput="2" outputowner="44" indexofoutput="3" />
                        <Link inputowner="45" indexofinput="2" outputowner="47" indexofoutput="4" />
                        <Link inputowner="48" indexofinput="2" outputowner="45" indexofoutput="4" />
                        <Link inputowner="49" indexofinput="2" outputowner="48" indexofoutput="4" />
                        <Link inputowner="50" indexofinput="2" outputowner="49" indexofoutput="3" />
                        <Link inputowner="51" indexofinput="2" outputowner="50" indexofoutput="4" />
                        <Link inputowner="53" indexofinput="2" outputowner="51" indexofoutput="4" />
                        <Link inputowner="55" indexofinput="2" outputowner="53" indexofoutput="4" />
                        <Link inputowner="56" indexofinput="2" outputowner="55" indexofoutput="4" />
                        <Link inputowner="54" indexofinput="2" outputowner="56" indexofoutput="3" />
                        <Link inputowner="52" indexofinput="2" outputowner="54" indexofoutput="4" />
                        <Link inputowner="57" indexofinput="2" outputowner="52" indexofoutput="4" />
                        <Link inputowner="62" indexofinput="2" outputowner="60" indexofoutput="4" />
                        <Link inputowner="63" indexofinput="2" outputowner="62" indexofoutput="4" />
                        <Link inputowner="61" indexofinput="2" outputowner="63" indexofoutput="3" />
                        <Link inputowner="59" indexofinput="2" outputowner="61" indexofoutput="4" />
                        <Link inputowner="60" indexofinput="2" outputowner="57" indexofoutput="4" />
                        <Link inputowner="58" indexofinput="2" outputowner="59" indexofoutput="4" />
                        <Link inputowner="70" indexofinput="2" outputowner="68" indexofoutput="4" />
                        <Link inputowner="71" indexofinput="2" outputowner="70" indexofoutput="4" />
                        <Link inputowner="69" indexofinput="2" outputowner="71" indexofoutput="3" />
                        <Link inputowner="67" indexofinput="2" outputowner="69" indexofoutput="4" />
                        <Link inputowner="66" indexofinput="2" outputowner="67" indexofoutput="4" />
                        <Link inputowner="72" indexofinput="2" outputowner="64" indexofoutput="4" />
                        <Link inputowner="68" indexofinput="2" outputowner="72" indexofoutput="4" />
                        <Link inputowner="65" indexofinput="2" outputowner="66" indexofoutput="4" />
                        <Link inputowner="77" indexofinput="2" outputowner="75" indexofoutput="4" />
                        <Link inputowner="78" indexofinput="2" outputowner="77" indexofoutput="4" />
                        <Link inputowner="76" indexofinput="2" outputowner="78" indexofoutput="3" />
                        <Link inputowner="74" indexofinput="2" outputowner="76" indexofoutput="4" />
                        <Link inputowner="73" indexofinput="2" outputowner="74" indexofoutput="4" />
                        <Link inputowner="75" indexofinput="2" outputowner="79" indexofoutput="4" />
                        <Link inputowner="80" indexofinput="2" outputowner="65" indexofoutput="4" />
                        <Link inputowner="79" indexofinput="2" outputowner="80" indexofoutput="4" />
                        <Link inputowner="81" indexofinput="2" outputowner="73" indexofoutput="4" />
                        <Link inputowner="82" indexofinput="2" outputowner="81" indexofoutput="4" />
                        <Link inputowner="83" indexofinput="2" outputowner="82" indexofoutput="4" />
                        <Link inputowner="88" indexofinput="2" outputowner="86" indexofoutput="4" />
                        <Link inputowner="89" indexofinput="2" outputowner="88" indexofoutput="4" />
                        <Link inputowner="87" indexofinput="2" outputowner="89" indexofoutput="3" />
                        <Link inputowner="85" indexofinput="2" outputowner="87" indexofoutput="4" />
                        <Link inputowner="84" indexofinput="2" outputowner="85" indexofoutput="4" />
                        <Link inputowner="86" indexofinput="2" outputowner="90" indexofoutput="4" />
                        <Link inputowner="91" indexofinput="2" outputowner="84" indexofoutput="4" />
                        <Link inputowner="92" indexofinput="2" outputowner="91" indexofoutput="4" />
                        <Link inputowner="94" indexofinput="2" outputowner="92" indexofoutput="4" />
                        <Link inputowner="93" indexofinput="2" outputowner="94" indexofoutput="4" />
                        <Link inputowner="95" indexofinput="2" outputowner="93" indexofoutput="4" />
                        <Link inputowner="90" indexofinput="2" outputowner="83" indexofoutput="4" />
                        <Link inputowner="97" indexofinput="2" outputowner="95" indexofoutput="4" />
                        <Link inputowner="96" indexofinput="2" outputowner="97" indexofoutput="4" />
                        <Link inputowner="98" indexofinput="2" outputowner="58" indexofoutput="4" />
                        <Link inputowner="64" indexofinput="2" outputowner="98" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
